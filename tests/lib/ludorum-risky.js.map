{"version":3,"sources":["../src/__prologue__.js","../src/probabilities.js","../src/maps.js","../src/Risk.js","../src/players.js","../src/scenarios.js","../src/__epilogue__.js"],"names":[],"mappings":"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","file":"ludorum-risky.js","sourcesContent":["/** Module wrapper and layout.\r\n*/\r\nfunction __init__(base, Sermat, ludorum) { \"use strict\";\r\n\t/** Imports synonyms */\r\n\tvar declare = base.declare,\r\n\t\titerable = base.iterable,\r\n\t\tIterable = base.Iterable,\r\n\t\traise = base.raise,\r\n\t\traiseIf = base.raiseIf,\r\n\t\tinitialize = base.initialize,\r\n\t\tRandomness = base.Randomness,\r\n\t\tGame = ludorum.Game,\r\n\t\tPlayer = ludorum.Player;\r\n\r\n\tvar exports = {\r\n\t\t__package__: 'ludorum-risky',\r\n\t\t__name__: 'ludorum_risky',\r\n\t\t__init__: __init__,\r\n\t\t__dependencies__: [base, Sermat, ludorum],\r\n\t\t__SERMAT__: { include: [base] }\r\n\t};\r\n/** See `__epilogue__.js`.\r\n*/","/** # Probabilities\r\n\r\nRisk-like games are use dice to resolve conflicts, and hence are non-deterministic games. Using the\r\ndice probabilities is important for making good automatic players.\r\n*/\r\n\r\n// ## Attacks ######################################################################################\r\n\r\n/** The `attackProbabilities` function calculates the chances of success and failure of all \r\npossible attacks, given an attack army count and a defense army count.\r\n\r\nWarning! At counts higher than 3 it can get really slow.\r\n*/\r\nexports.attackProbabilities = function attackProbabilities(attackCount, defenseCount) {\r\n\tvar result = {},\r\n\t\tcompFun = function (x,y) { return y-x;};\r\n\tIterable.product.apply(Iterable, Iterable.repeat([1,2,3,4,5,6], attackCount + defenseCount).toArray())\r\n\t\t.forEach(function (dice) {\r\n\t\t\tvar attackDice = dice.slice(0, attackCount).sort(compFun),\r\n\t\t\t\tdefenseDice = dice.slice(attackCount).sort(compFun),\r\n\t\t\t\tattackWins = 0,\r\n\t\t\t\tdefenseWins = 0,\r\n\t\t\t\tkey;\r\n\t\t\tbase.iterable(attackDice).zip(defenseDice).forEachApply(function (attackDie, defenseDie) {\r\n\t\t\t\tif (attackDie > defenseDie) {\r\n\t\t\t\t\tattackWins++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdefenseWins++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tkey = 'A'+ attackWins +'D'+ defenseWins;\r\n\t\t\tresult[key] = (result[key] |0) + 1;\r\n\t\t});\r\n\tvar totalCount = Math.pow(6, attackCount + defenseCount);\r\n\tfor (var k in result) {\r\n\t\tresult[k] = result[k] / totalCount;\r\n\t}\r\n\treturn result;\r\n};\r\n\t\r\n/** The `ATTACK_PROBABILITIES` for the common scenarios have been pre-calculated. The keys are\r\ndefined like `/A\\d+D\\d+/` where each number is the amount of losses, for attacker and \r\ndefender.\r\n*/\r\nvar ATTACK_PROBABILITIES = exports.ATTACK_PROBABILITIES = { \r\n\tA1D1: { A1D0: 0.5833333333333334, A0D1: 0.4166666666666667},\r\n\tA1D2: { A1D0: 0.7453703703703703, A0D1: 0.25462962962962965},\r\n\tA2D1: { A1D0: 0.4212962962962963, A0D1: 0.5787037037037037},\r\n\tA2D2: { A1D1: 0.32407407407407407, A2D0: 0.44830246913580246, A0D2: 0.22762345679012347}, \r\n\tA3D1: { A1D0: 0.3402777777777778, A0D1: 0.6597222222222222},\r\n\tA3D2: { A1D1: 0.3357767489711934, A2D0: 0.2925668724279835, A0D2: 0.37165637860082307}\r\n};\r\n\r\n/** The aleatory variable used with Risk-like games does not consider all posible dice rolls. Most \r\ndice rolls can be grouped in at 2 or 3 different results. Hence, only the results and their \r\nprobabilities are considered.\r\n*/\r\nvar AttackAleatory = declare(ludorum.aleatories.Aleatory, {\r\n\tconstructor: function UniformAleatory(distribution) {\r\n\t\traiseIf(distribution.length < 1, \"Aleatory cannot have an empty distribution!\");\r\n\t\tthis.__distribution__ = distribution;\r\n\t},\r\n\t\r\n\tdistribution: function distribution() {\r\n\t\treturn this.__distribution__;\r\n\t},\r\n\t\r\n\tvalue: function value(random) {\r\n\t\treturn (random || Randomness.DEFAULT).weightedChoice(this.__distribution__);\r\n\t},\r\n\r\n\t'static __SERMAT__': {\r\n\t\tidentifier: 'AttackAleatory',\r\n\t\tserializer: function serialize_UniformAleatory(obj) {\r\n\t\t\treturn [this.__distribution__];\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/** `ATTACK_ALEATORIES` is just the `Aleatory` representation of the `ATTACK_PROBABILITIES`.\r\n*/\r\nvar ATTACK_ALEATORIES = exports.ATTACK_ALEATORIES = iterable(ATTACK_PROBABILITIES)\r\n\t.mapApply(function (amounts, results) {\r\n\t\tvar distribution = iterable(results).mapApply(function (result, prob) {\r\n\t\t\tvar value = {\r\n\t\t\t\tattack: -(result.charAt(1) |0),\r\n\t\t\t\tdefence: -(result.charAt(3) |0)\r\n\t\t\t};\r\n\t\t\treturn [value, prob];\r\n\t\t});\r\n\t\treturn [amounts, new AttackAleatory(distribution)];\r\n\t}).toObject();\r\n\r\n// ## Conquests ####################################################################################\r\n\r\n/** The conquest probability is the chance of a certain number of attackers to defeat a certain\r\nnumber of defenders. It is different from the attack probability, since a conquest may usually \r\ninvolve many attacks.\r\n\r\nThe calculations assume that both players use as many armies as they can, and that the attacks\r\ncontinue until all armies of either player get destroyed.\r\n*/\r\nvar conquestProbability = exports.conquestProbability = function conquestProbability(attackCount, \r\n\t\tdefenseCount, cache, attackProbs) {\r\n\tcache = cache || CONQUEST_PROBABILITIES;\r\n\tattackProbs = attackProbs || ATTACK_PROBABILITIES;\r\n\tif (attackCount < 1) {\r\n\t\treturn 0;\r\n\t} else if (defenseCount < 1) {\r\n\t\treturn 1;\r\n\t}\r\n\tvar key = 'A'+ attackCount +'D'+ defenseCount,\r\n\t\tresult = cache[key];\r\n\tif (!isNaN(result)) { // Hit cache.\r\n\t\treturn result;\r\n\t} else {\r\n\t\tresult = 1;\r\n\t\tif (defenseCount === 1) {\r\n\t\t\tif (attackCount === 1) {\r\n\t\t\t\tresult = attackProbs.A1D1.A1D0;\r\n\t\t\t} else if (attackCount === 2) {\r\n\t\t\t\tresult = attackProbs.A2D1.A1D0 + \r\n\t\t\t\t\tattackProbs.A2D1.A0D1 * conquestProbability(attackCount - 1, defenseCount, cache, attackProbs);\r\n\t\t\t} else if (attackCount >= 3) {\r\n\t\t\t\tresult = attackProbs.A3D1.A1D0 + \r\n\t\t\t\t\tattackProbs.A3D1.A0D1 * conquestProbability(attackCount - 1, defenseCount, cache, attackProbs);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (defenseCount === 2){\r\n\t\t\tif (attackCount === 1) {\r\n\t\t\t\tresult = attackProbs.A1D2.A1D0 * conquestProbability(attackCount, defenseCount - 1, cache, attackProbs);\r\n\t\t\t} else if (attackCount === 2) {\r\n\t\t\t\tresult = attackProbs.A2D2.A2D0 + \r\n\t\t\t\t\tattackProbs.A2D2.A1D1 * conquestProbability(attackCount - 1, defenseCount - 1, cache, attackProbs);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (defenseCount >= 3){\r\n\t\t\tif (attackCount === 1) {\r\n\t\t\t\tresult = attackProbs.A1D2.A1D0 * conquestProbability(attackCount, defenseCount - 1, cache, attackProbs);\r\n\t\t\t} else if (attackCount === 2) {\r\n\t\t\t\tresult = attackProbs.A2D2.A2D0 * conquestProbability(attackCount, defenseCount - 2, cache, attackProbs) +\r\n\t\t\t\t\tattackProbs.A2D2.A1D1 * conquestProbability(attackCount - 1, defenseCount - 1, cache, attackProbs);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (attackCount >= 3 && defenseCount >= 2) {\r\n\t\t\tresult = attackProbs.A3D2.A2D0 * conquestProbability(attackCount, defenseCount - 2, cache, attackProbs) +\r\n\t\t\t\tattackProbs.A3D2.A0D2 * conquestProbability(attackCount - 2, defenseCount, cache, attackProbs) +\r\n\t\t\t\tattackProbs.A3D2.A1D1 * conquestProbability(attackCount - 1, defenseCount - 1, cache, attackProbs);\r\n\t\t}\r\n\t\tcache[key] = result;\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\n/** The `CONQUEST_PROBABILITIES` for the common scenarios have also been pre-calculated.\r\n*/\r\nvar CONQUEST_PROBABILITIES = exports.CONQUEST_PROBABILITIES = (function () {\r\n\tvar result = {};\r\n\tconquestProbability(30, 30, result, ATTACK_PROBABILITIES);\r\n\treturn result;\r\n})();\r\n","/** # Maps\r\n\r\nIn Risk-like games, maps are defined by a set of territories, their frontiers and the continents \r\nthey form.\r\n*/\r\nvar BoardMap = exports.BoardMap = declare({\r\n\t/** The `BoardMap` constructor makes the following checks:\r\n\t*/\r\n\tconstructor: function RiskyMap(territories, continents, bonuses) {\r\n\t\t/** + the board must have at least 2 territories.\r\n\t\t*/\r\n\t\traiseIf(!territories || Object.keys(territories).length < 2, \"Illegal territory definition \", \r\n\t\t\tJSON.stringify(territories), \"!\");\r\n\t\tcontinents = continents || {};\r\n\t\tbonuses = bonuses || {};\r\n\t\t\r\n\t\tthis.adjacents = Object.freeze(territories);\r\n\t\tthis.territories = Object.freeze(iterable(territories).mapApply(function (t, fs) {\r\n\t\t\t/** + all territories must have at least one frontier.\r\n\t\t\t*/\r\n\t\t\traiseIf(fs.length < 1, \"Territory \", t, \" has no frontiers!\");\r\n\t\t\tfs.forEach(function (f) {\r\n\t\t\t\t/** + all frontiers must be between declared territories.\r\n\t\t\t\t*/\r\n\t\t\t\traiseIf(!territories.hasOwnProperty(f), \"Territory \", t, \r\n\t\t\t\t\t\" has a frontier with an unknown territory \", f, \"!\");\r\n\t\t\t\t/** + a territory cannot have a frontier with itself.\r\n\t\t\t\t*/\r\n\t\t\t\traiseIf(t === f, \"Territory \", t, \" has a frontier with itself!\");\r\n\t\t\t});\r\n\t\t\treturn t;\r\n\t\t}).sorted().toArray());\r\n\t\tthis.territoryIndexes = Object.freeze(iterable(this.territories).map(function (t, i) {\r\n\t\t\treturn [t, i];\r\n\t\t}).toObject());\r\n\t\tthis.continentTerritories = Object.freeze(continents);\r\n\t\tthis.continents = Object.freeze(iterable(continents).mapApply(function (c, ts) {\r\n\t\t\t/** + all continents must have at least one territory.\r\n\t\t\t*/\r\n\t\t\traiseIf(ts.length < 1, \"Continent \", c, \" has no territories!\");\r\n\t\t\tts.forEach(function (t) {\r\n\t\t\t\t/** + all continents' territories must be declared.\r\n\t\t\t\t*/\r\n\t\t\t\traiseIf(!territories.hasOwnProperty(t), \"Continent \", c, \" has an unknown territory \", \r\n\t\t\t\t\tt, \"!\");\r\n\t\t\t});\r\n\t\t\treturn c;\r\n\t\t}).sorted().toArray());\r\n\t\t/** + all bonuses' continents must be declared.\r\n\t\t*/\r\n\t\titerable(bonuses).forEachApply(function (c, b) {\r\n\t\t\traiseIf(!continents.hasOwnProperty(c), \"Bonus defined for unknown continent \", c, \"!\");\r\n\t\t});\r\n\t\tthis.bonuses = Object.freeze(bonuses);\r\n\t\tObject.freeze(this);\r\n\t},\r\n\t\r\n\t/** The method `territoryContinent` return the continent of the given territory.\r\n\t*/\r\n\tterritoryContinent: function (t) {\r\n\t\treturn iterable(this.continentTerritories).filterApply(function (c, ts) {\r\n\t\t\tvar b = false;\r\n\t\t\titerable(ts).forEach(function (te) {\r\n\t\t\t\tif(te === t) {\r\n\t\t\t\t\tb = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn b;\r\n\t\t}, function (c, ts) {\r\n\t\t\treturn c;\r\n\t\t}).toArray().toString();\r\n\t},\r\n\r\n\t/** Two territories are `adjacent` if if they share a frontier or a lane in the map.\r\n\t*/\r\n\tadjacent: function (t1, t2) {\r\n\t\treturn this.adjacents[t1] && this.adjacents[t1].indexOf(t2) >= 0;\r\n\t},\r\n\r\n\t/** The `frontiers` of a map is a sequence of all pairs of adjacent territories.\r\n\t*/\r\n\tfrontiers: function frontiers() {\r\n\t\treturn iterable(this.adjacents).mapApply(function (t1, ts) {\r\n\t\t\treturn ts.map(function (t2) {\r\n\t\t\t\treturn [t1, t2];\r\n\t\t\t});\r\n\t\t}).flatten();\r\n\t},\r\n\t\r\n\t/** The `bonus` method returns the bonus for a continent or continents.\r\n\t*/\r\n\tbonus: function bonus() {\r\n\t\tvar result = 0;\r\n\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\tresult += this.bonuses[arguments[i]] || 0;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t\r\n\t// ## Utility methods ##########################################################################\r\n\t\r\n\t/** Serialization and materialization using Sermat.\r\n\t*/\r\n\t'static __SERMAT__': {\r\n\t\tidentifier: 'BoardMap',\r\n\t\tserializer: function serialize_BoardMap(obj) {\r\n\t\t\treturn [obj.adjacents, obj.continentTerritories, obj.bonuses];\r\n\t\t}\r\n\t},\r\n}); // class BoardMap\r\n\r\n/** The `MAPS` object holds map definitions, like: */\r\nvar MAPS = exports.MAPS = {\r\n\t/** + `test01` is a very small and simple map meant for testing only.\r\n\t*/\r\n\ttest01: new BoardMap({\r\n\t\t\"WhiteCountry\": [\"BlackCountry\", \"YellowCountry\"],\r\n\t\t\"YellowCountry\": [\"WhiteCountry\", \"RedCountry\"],\r\n\t\t\"RedCountry\": [\"YellowCountry\", \"GreenCountry\"],\r\n\t\t\"GreenCountry\": [\"RedCountry\", \"BlueCountry\"],\r\n\t\t\"BlueCountry\": [\"GreenCountry\", \"BlackCountry\"],\r\n\t\t\"BlackCountry\": [\"BlueCountry\", \"WhiteCountry\"]\r\n\t}, { // continents\r\n\t\t\"GreyContinent\": [\"WhiteCountry\", \"BlackCountry\"],\r\n\t\t\"OrangeContinent\": [\"YellowCountry\", \"RedCountry\"],\r\n\t\t\"CyanContinent\": [\"GreenCountry\", \"BlueCountry\"]\r\n\t}, { // bonuses.\r\n\t\t\"GreyContinent\": 2,\r\n\t\t\"OrangeContinent\": 2,\r\n\t\t\"CyanContinent\": 2\r\n\t}),\r\n\t\r\n\t/** + `classic` is the map of the original Risk by Parker Brothers.\r\n\t*/\r\n\tclassic: new BoardMap({ // territories.\r\n\t\t\"Alaska\": [\"Alberta\", \"Northwest Territory\", \"Kamchatka\"],\r\n\t\t\"Alberta\": [\"Alaska\", \"Northwest Territory\", \"Ontario\", \"Western United States\"],\r\n\t\t\"Central America\": [\"Eastern United States\", \"Western United States\", \"Venezuela\"],\r\n\t\t\"Eastern United States\": [\"Alberta\", \"Central America\", \"Ontario\", \"Quebec\", \"Western United States\"],\r\n\t\t\"Greenland\": [\"Northwest Territory\", \"Ontario\", \"Quebec\", \"Iceland\"],\r\n\t\t\"Northwest Territory\": [\"Alaska\", \"Alberta\", \"Ontario\", \"Greenland\"],\r\n\t\t\"Ontario\": [\"Alberta\", \"Eastern United States\", \"Greenland\", \"Northwest Territory\", \"Quebec\", \"Western United States\"],\r\n\t\t\"Quebec\": [\"Eastern United States\", \"Greenland\", \"Ontario\"],\r\n\t\t\"Western United States\": [\"Alberta\", \"Central America\", \"Eastern United States\", \"Ontario\"],\r\n\t\t\"Argentina\": [\"Brazil\", \"Peru\"],\r\n\t\t\"Brazil\": [\"Argentina\", \"Peru\", \"Venezuela\", \"North Africa\"],\r\n\t\t\"Peru\": [\"Argentina\", \"Brazil\", \"Venezuela\"],\r\n\t\t\"Venezuela\": [\"Brazil\", \"Peru\", \"Central America\"],\r\n\t\t\"Great Britain\": [\"Iceland\", \"Northern Europe\", \"Scandinavia\", \"Western Europe\"],\r\n\t\t\"Iceland\": [\"Great Britain\", \"Scandinavia\", \"Greenland\"],\r\n\t\t\"Northern Europe\": [\"Great Britain\", \"Scandinavia\", \"Southern Europe\", \"Ukraine\", \"Western Europe\"],\r\n\t\t\"Scandinavia\": [\"Great Britain\", \"Iceland\", \"Northern Europe\", \"Ukraine\"],\r\n\t\t\"Southern Europe\": [\"Northern Europe\", \"Ukraine\", \"Western Europe\", \"Middle East\", \"Egypt\", \"North Africa\"],\r\n\t\t\"Ukraine\": [\"Northern Europe\", \"Scandinavia\", \"Southern Europe\", \"Afghanistan\", \"Middle East\", \"Ural\"],\r\n\t\t\"Western Europe\": [\"Great Britain\", \"Northern Europe\", \"Southern Europe\", \"North Africa\"],\r\n\t\t\"Congo\": [\"East Africa\", \"North Africa\", \"South Africa\"],\r\n\t\t\"East Africa\": [\"Congo\", \"Egypt\", \"Madagascar\", \"North Africa\", \"South Africa\", \"Middle East\"],\r\n\t\t\"Egypt\": [\"East Africa\", \"North Africa\", \"Southern Europe\", \"Middle East\"],\r\n\t\t\"Madagascar\": [\"East Africa\", \"South Africa\"],\r\n\t\t\"North Africa\": [\"Congo\", \"East Africa\", \"Egypt\", \"Southern Europe\", \"Western Europe\", \"Brazil\"],\r\n\t\t\"South Africa\": [\"Congo\", \"East Africa\", \"Madagascar\"],\r\n\t\t\"Afghanistan\": [\"China\", \"India\", \"Middle East\", \"Ural\", \"Ukraine\"],\r\n\t\t\"China\": [\"Afghanistan\", \"India\", \"Mongolia\", \"Siam\", \"Siberia\", \"Ural\"],\r\n\t\t\"India\": [\"Afghanistan\", \"China\", \"Middle East\", \"Siam\"],\r\n\t\t\"Irkutsk\": [\"Kamchatka\", \"Mongolia\", \"Siberia\", \"Yakutsk\"],\r\n\t\t\"Japan\": [\"Kamchatka\", \"Mongolia\"],\r\n\t\t\"Kamchatka\": [\"Irkutsk\", \"Japan\", \"Mongolia\", \"Yakutsk\", \"Alaska\"],\r\n\t\t\"Middle East\": [\"Afghanistan\", \"India\", \"Southern Europe\", \"Ukraine\", \"East Africa\", \"Egypt\"],\r\n\t\t\"Mongolia\": [\"China\", \"Irkutsk\", \"Japan\", \"Kamchatka\", \"Siberia\"],\r\n\t\t\"Siam\": [\"China\", \"India\", \"Indonesia\"],\r\n\t\t\"Siberia\": [\"China\", \"Irkutsk\", \"Mongolia\", \"Ural\", \"Yakutsk\"],\r\n\t\t\"Ural\": [\"Afghanistan\", \"China\", \"Siberia\", \"Ukraine\"],\r\n\t\t\"Yakutsk\": [\"Irkutsk\", \"Kamchatka\", \"Siberia\"],\r\n\t\t\"Eastern Australia\": [\"New Guinea\", \"Western Australia\"],\r\n\t\t\"Indonesia\": [\"New Guinea\", \"Western Australia\", \"Siam\"],\r\n\t\t\"New Guinea\": [\"Eastern Australia\", \"Indonesia\", \"Western Australia\"],\r\n\t\t\"Western Australia\": [\"Eastern Australia\", \"Indonesia\", \"New Guinea\"]\r\n\t}, { // continents.\r\n\t\t\"South America\": [\"Argentina\", \"Brazil\", \"Peru\", \"Venezuela\"],\r\n\t\t\"Australia\" : [\"Eastern Australia\", \"Indonesia\", \"New Guinea\", \"Western Australia\"],\r\n\t\t\"Africa\" : [\"Congo\", \"East Africa\", \"Egypt\", \"Madagascar\", \"North Africa\", \"South Africa\"],\r\n\t\t\"Europe\" : [\"Great Britain\", \"Iceland\", \"Northern Europe\", \"Scandinavia\", \"Southern Europe\", \"Ukraine\", \"Western Europe\"],\r\n\t\t\"North America\" : [\"Alaska\", \"Alberta\", \"Central America\", \"Eastern United States\", \"Greenland\", \"Northwest Territory\", \"Ontario\", \"Quebec\", \"Western United States\"],\r\n\t\t\"Asia\" : [\"Afghanistan\", \"China\", \"India\", \"Irkutsk\", \"Japan\", \"Kamchatka\", \"Middle East\", \"Mongolia\", \"Siam\", \"Siberia\", \"Ural\", \"Yakutsk\"]\r\n\t}, { // bonuses.\r\n\t\t\"Asia\" : 7,\r\n\t\t\"North America\" : 5,\r\n\t\t\"Europe\" : 5,\r\n\t\t\"Africa\" : 3,\r\n\t\t\"Australia\" : 2,\r\n\t\t\"South America\" : 2\r\n\t})\r\n}; // MAPS","/** # Risk.\n\nImplementation of the Risk game\n*/\nvar Risk = exports.Risk = declare(Game, {\n\tname: 'Risk',\n\t\n\t/** \n\t*/\n\tplayers: [\"White\", \"Yellow\", \"Red\", \"Green\", \"Blue\", \"Black\"],\n\t\n\t/** The active player can be in one of the following stages in his turn:\n\t\n\t+ `REINFORCE`: The player is reinforcing the owned territories with more armies. This stage has\n\tthe number of reinforcements available.\n\t\n\t+ `ATTACK`: After reinforcements, the player can attack neighbouring enemy territories.\n\n\t+ `OCCUPY`: After a successful attack, the player must decide with how many armies to occupy the\n\tinvaded territory. This stage has the territory from which the attack was made, and the attacked\n\tterritory.\n\t\n\t+ `FORTIFY`: After all attacks, the turn ends by regrouping forces from one territory to \n\tanother.\n\t*/\n\tSTAGES: {\n\t\tREINFORCE: 0, ATTACK: 1, OCCUPY: 2, FORTIFY: 3\n\t},\n\t\n\t/** The constructor takes the following parameters:\n\t*/\n\tconstructor: function Risk(params) {\n\t\tparams = params || {};\n\t\tinitialize(this, params)\n\t\t\t/** + `boardMap`: The board's map must be an instance of `BoardMap`.\n\t\t\t*/\n\t\t\t.object('boardMap', { defaultValue: MAPS.classic })\n\t\t\t/** + `stage`: An array containing the current game stage information.\n\t\t\t*/\n\t\t\t.array('stage', { ignore: true })\n\t\t\t/** + `round`: The current round number. A round is completed after all players have \n\t\t\tfinished their turns.\n\t\t\t*/\n\t\t\t.integer('round', { coerce: true, defaultValue: 0 })\n\t\t\t/** + `rounds`: A limit of rounds for the game. By default there isn't a limit.\n\t\t\t*/\n\t\t\t.number('rounds', { coerce: true, defaultValue: Infinity });\n\t\tGame.call(this, params.activePlayer);\n\t\t/** + `armies`: An object containing the game state, assigning every territory a player and\n\t\tan amount of armies. This representations is compressed in a string as an optimization.\n\t\t*/\n\t\tif (!params.armies) {\n\t\t\tthis.armies = this.compressGameState(this.emptyGameState());\n\t\t} else if (typeof params.armies === 'string') {\n\t\t\tthis.armies = params.armies;\n\t\t} else if (typeof params.armies === 'object') {\n\t\t\tthis.armies = this.compressGameState(params.armies);\n\t\t} else {\n\t\t\traise(\"Invalid armies < \", JSON.stringify(params.armies), \" >!\");\n\t\t}\n\t\t/** The default stage is `REINFORCE`.\n\t\t*/\n\t\tif (!this.stage) {\n\t\t\tthis.stage = [this.STAGES.REINFORCE, this.playerReinforcements()];\n\t\t}\n\t},\n\t\n\t// ## Game state management ####################################################################\n\t\n\t/** An `emptyGameState` is an object with a property for every territory in the map, mapping to\n\tan array `[\"\", 0]` (no player and no armies).\n\t*/\n\temptyGameState: function emptyGameState() {\n\t\treturn iterable(this.boardMap.territories).map(function (territory) {\n\t\t\treturn [territory, [\"\", 0]];\n\t\t}).toObject();\n\t},\n\t\n\t/** To optimize memory requirements, the game state is compressed in a string. The `state` \n\targument must be an object with a member for every territory, with a value of the form \n\t`[string, integer]` representing the player controlling the territory and the number of armies\n\tpresent in it.\n\t\n\tThis is translated in a string with one character per territory, in the same order as \n\t`this.map.territories`. Each character's code is calculated by multiplying the army count by the \n\tnumber of players and adding the player index in `this.players` (or zero if no player owns the \n\tterritory).\n\t*/\n\tcompressGameState: function compressGameState(state) {\n\t\tvar players = this.players,\n\t\t\tplayerCount = players.length;\n\t\treturn this.boardMap.territories.map(function (t) {\n\t\t\tvar charCode = state[t][1];\n\t\t\tif (charCode > 0) { // There are armies in the territory.\n\t\t\t\tvar playerIndex = players.indexOf(state[t][0]);\n\t\t\t\traiseIf(playerIndex < 0, \"Unknown player '\", state[t][0], \"!\");\n\t\t\t\tcharCode = charCode * playerCount + playerIndex;\n\t\t\t}\n\t\t\treturn String.fromCharCode(charCode);\n\t\t}).join('');\n\t},\n\t\n\t/** Uncompressing the game state takes a string and returns the object describing the board \n\tstate.\n\t*/\n\tuncompressGameState: function uncompressGameState(compressed) {\n\t\tvar state = {},\n\t\t\tplayers = this.players,\n\t\t\tplayerCount = players.length;\n\t\titerable(this.boardMap.territories).zip(compressed).forEachApply(function (t, c) {\n\t\t\tc = c.charCodeAt(0);\n\t\t\tstate[t] = c > 0 ? [players[c % playerCount], Math.floor(c / playerCount)] : [\"\", 0];\n\t\t});\n\t\treturn state;\n\t},\n\t\n\t/** The `playerOf` a `territory` is the name of the player that has armies in the given \n\tterritory.\n\t*/\n\tplayerOf: function (territory) {\n\t\tvar i = this.boardMap.territoryIndexes[territory],\n\t\t\tarmies = this.armies.charCodeAt(i);\n\t\treturn armies ? this.players[armies % this.players.length] : \"\";\n\t},\n\t\n\t/** The `armyCount` of a `territory` is amount of armies present in said territory.\n\t*/\n\tarmyCount: function (territory) {\n\t\tvar i = this.boardMap.territoryIndexes[territory],\n\t\t\tarmies = this.armies.charCodeAt(i);\n\t\treturn armies ? Math.floor(armies / this.players.length) : 0;\n\t},\n\t\n\t/** The `playerTerritories` returns an array of the territories currently controlled by the\n\tgiven `player` (or the active player by default).\n\t*/\n\tplayerTerritories: function playerTerritories(player) {\n\t\tplayer = this.players.indexOf(player || this.activePlayer());\n\t\tvar playerCount = this.players.length;\n\t\treturn iterable(this.boardMap.territories).zip(this.armies).filterApply(function (t, a) {\n\t\t\treturn a.charCodeAt(0) % playerCount === player;\n\t\t}, function (t, a) {\n\t\t\treturn t;\n\t\t}).toArray();\n\t},\n\t\n\t/** The `playerContinents` returns an array of the continents currently controlled by the\n\tgiven `player` (or the active player by default).\n\t*/\n\tplayerContinents: function playerContinents(player) {\n\t\tplayer = this.players.indexOf(player || this.activePlayer());\n\t\tvar playerCount = this.players.length,\n\t\t\tarmies = this.armies,\n\t\t\tterritoryIndexes = this.boardMap.territoryIndexes;\n\t\treturn iterable(this.boardMap.continentTerritories).filterApply(function (c, ts) {\n\t\t\treturn iterable(ts).all(function (t) {\n\t\t\t\treturn armies.charCodeAt(territoryIndexes[t]) % playerCount === player;\n\t\t\t});\n\t\t}, function (c, ts) {\n\t\t\treturn c;\n\t\t}).toArray();\n\t},\n\t\n\t/**\n\tTODO\n\t\n\tThe `playerPendingTerritories` returns an object listing pending terrritories to complete the\n\tcontinent by the given `player` (or the active player by default).\n\t*/\n\tplayerPendingTerritories: function playerPendingTerritories(player) {\n\t\tplayer = player || this.activePlayer();\n\t\tvar game = this,\n\t\t\tcT = {};\n\t\titerable(this.boardMap.continentTerritories).forEachApply(function (c, ts) {\n\t\t\tvar count = 0;\n\t\t\tts.forEach(function(t) {\n\t\t\t\t\tif (game.playerOf(t) != player){\n\t\t\t\t\t\tcount = count + 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t});\n\t\t\tcT[c] = count;\n\t\t});\n\t\treturn cT; \n\t},\n\t\n\t/** TODO\n\tThe `hasPresence` return true if the given `player` (or the active player by default) has presence in continent.\n\t*/\n\thasPresence: function hasPresence(player, continent) {\n\t\tplayer = player || this.activePlayer();\n\t\tvar game = this,\n\t\t\taux = false;\n\t\titerable(this.boardMap.continentTerritories[continent]).forEach(function (t) { \n\t\t\tif (game.playerOf(t) === player){\n\t\t\t\taux = true; //como hago para cortar?\n\t\t\t}\n\t\t});\n\t\treturn aux; \n\t},\n\t\n\t/** TODO\n\tThe `continentAdyacent` return true if the given `player` (or the active player by default) has a territory \n\tadyacent to (or in) continent.\n\t*/\n\tcontinentAdyacent: function continentAdyacent(player, continent) {\n\t\tplayer = player || this.activePlayer();\n\t\tvar game = this,\n\t\t\taux = false;\n\t\titerable(game.boardMap.continentTerritories[continent]).forEach(function (t) { \n\t\t\tgame.conflictFrontiers(player).forEach(function (a) {\n\t\t\t\t//console.log(a);// + \" - \" + a[0] === t);\n\t\t\t\tif( a[1] === t) {\n\t\t\t\t\taux = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t\treturn aux; \n\t},\n\t\n\t\n\t/** At the beginning of his turn every player gets an amount of reinforcements equal to the \n\tnumber of territories he controls divided by 3 (rounded down).\n\t*/\n\tplayerReinforcements: function playerReinforcements(player) {\n\t\tplayer = player || this.activePlayer();\n\t\tvar ts = this.playerTerritories(player).length / 3,\n\t\t\tcs = this.boardMap.bonus.apply(this.boardMap, this.playerContinents(player));\n\t\treturn Math.floor(Math.max(this.MIN_REINFORCEMENTS, ts) + cs);\n\t},\n\t\n\t/** Still there is a minimum amount of reinforcements (`MIN_REINFORCEMENTS`, 3 by default) \n\tdefined so players always have a fighting chance.\n\t*/\n\tMIN_REINFORCEMENTS: 3,\t\n\t\n\t// ## Game ending and result ###################################################################\n\t\n\t/** The score for each player in the game is equal to the amount of armies that could be \n\treinforced if it where each player's round beginning.\n\t*/\n\tscores: function scores() {\n\t\tvar game = this;\n\t\treturn iterable(this.players).map(function (p) {\n\t\t\treturn [p, game.playerTerritories(p).length];\n\t\t}).toObject();\n\t},\n\t\n\t/** The board is `dominated` when all territories are controlled by the same player. If that is\n\tthe case this function returns this player, else returns `null`.\n\t*/\n\tdominated: function dominated() {\n\t\tvar playerCount = this.players.length,\n\t\t\tp1 = -1, p2;\n\t\tfor (var i = 0, len = this.armies.length; i < len; i++) {\n\t\t\tp2 = this.armies.charCodeAt(i) % playerCount;\n\t\t\tif (p1 !== p2) {\n\t\t\t\tif (p1 < 0) {\n\t\t\t\t\tp1 = p2;\n\t\t\t\t} else {\n\t\t\t\t\treturn null; // Two different players found in the board.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.players[p1]; // Only one player is in the board if the loop did not abort.\n\t},\n\t\n\t/** The board is `moreHalfDominated` when more than 50% of territories are controlled by the same player. If that is\n\tthe case this function returns this player, else returns `null`.\n\t*/\n\tmoreHalfDominated: function moreHalfDominated() {\n\t\tif(this.playerTerritories(this.activePlayer()).length > 21){// && this.playerContinents(this.activePlayer()).length > 0) {\n\t\t\t\treturn this.activePlayer();\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\t\n\t/** A game of Risk is finished when the whole board is owned by the winner, or when the round \n\tlimit is reached.\n\t*/\n\tresult: function result() {\n\t\tvar r = this.__result__;\n\t\tif (typeof r === 'undefined') {\n\t\t\tvar p = this.moreHalfDominated();\n\t\t\tif (p) { // One player conquered the whole board.\n\t\t\t\tr = this.victory(p, 5);\n\t\t\t} else if (this.round >= this.rounds) { // Round limit has been reached.\n\t\t\t\tvar scores = this.scores(),\n\t\t\t\t\tps = this.players.slice().sort(function (p1, p2) { // Sort players in decreasing order of score.\n\t\t\t\t\t\treturn scores[p2] - scores[p1];\n\t\t\t\t\t});\n\t\t\t\tif (ps[0] > ps[1]) {\n\t\t\t\t\tr = this.victory(ps[0]);\n\t\t\t\t} else { // Tied game.\n\t\t\t\t\tr = this.draw();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tr = null; // Game goes on.\n\t\t\t}\n\t\t\tthis.__result__ = r;\n\t\t}\n\t\treturn r;\n\t},\n\t\n\t// ## Movement calculations ####################################################################\n\t\n\t/** The active player's `moves()` depend on the stage the turn is currently in.\n\t*/\n\tmoves: function moves() {\n\t\tvar r = this.__moves__;\n\t\tif (typeof r === 'undefined') {\n\t\t\tvar activePlayer = this.activePlayer();\n\t\t\tif (this.result()) {\n\t\t\t\tr = null;\n\t\t\t} else {\n\t\t\t\tr = {};\n\t\t\t\tswitch (this.stage[0]) {\n\t\t\t\t\tcase this.STAGES.REINFORCE: r[activePlayer] = this.reinforceMoves(); break;\n\t\t\t\t\tcase this.STAGES.ATTACK:    r[activePlayer] = this.attackMoves(); break;\n\t\t\t\t\tcase this.STAGES.OCCUPY:    r[activePlayer] = this.occupyMoves(); break;\n\t\t\t\t\tcase this.STAGES.FORTIFY:   r[activePlayer] = this.fortifyMoves(); break;\n\t\t\t\t\tdefault: raise(\"Invalid stage < \", JSON.stringify(this.stage), \" >!\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.__moves__ = r;\n\t\t}\n\t\treturn r;\n\t},\n\t\n\t/** The moves for reinforcements are arrays of the form `[\"REINFORCE\", territory, integer]`.\n\t*/\n\treinforceMoves: function reinforceMoves() {\n\t\tvar game = this,\n\t\t\tactivePlayer = this.activePlayer(),\n\t\t\tresult = [];\n\t\tif (this.stage[0] === this.STAGES.REINFORCE) {\n\t\t\tresult = Iterable.product([\"REINFORCE\"], \n\t\t\t\tthis.playerTerritories(activePlayer), \n\t\t\t\tIterable.range(1, this.stage[1] + 1)\n\t\t\t).toArray();\n\t\t}\n\t\treturn result.length > 0 ? result : [this.PASS_MOVE];\n\t},\n\t\n\t/** The `conflictFrontiers` of the board are pairs of adjacent territories that are owned one by\n\tthe given `player` (or the active player by default) and the other by a different player.\n\t*/\n\tconflictFrontiers: function conflictFrontiers(player) {\n\t\tplayer = player || this.activePlayer();\n\t\tvar game = this;\n\t\treturn iterable(this.boardMap.adjacents).mapApply(function (t1, ts) {\n\t\t\tvar p1 = game.playerOf(t1);\n\t\t\tif (p1 === player) {\n\t\t\t\treturn iterable(ts).filter(function (t2) {\n\t\t\t\t\treturn game.playerOf(t2) !== player;\n\t\t\t\t}, function (t2) {\n\t\t\t\t\treturn [t1, t2];\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Iterable.EMPTY;\n\t\t\t}\n\t\t}).flatten();\n\t},\n\t\n\t/** The stages `ATTACK` and `FORTIFY` allow the player to pass the turn.\n\t*/\n\tPASS_MOVE: [\"PASS\"],\n\t\n\t/** The moves for attacks are arrays of the form `[\"ATTACK\", territoryFrom, territoryTo, integer]`.\n\t*/\n\tattackMoves: function attackMoves() {\n\t\tvar game = this,\n\t\t\tresult = [this.PASS_MOVE];\n\t\tif (this.stage[0] === this.STAGES.ATTACK) {\n\t\t\tthis.conflictFrontiers().forEach(function (pair) {\n\t\t\t\tvar armyCount = Math.min(game.MAX_ATTACK, game.armyCount(pair[0]) - 1);\n\t\t\t\tfor (var i = 1; i <= armyCount; i++) {\n\t\t\t\t\tresult.push([\"ATTACK\", pair[0], pair[1], i]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t},\n\t\n\t/** There is a maximum amount of armies that can be used in any attack.\n\t*/\n\tMAX_ATTACK: 3,\n\t\n\t/** The moves for occupations are arrays of the form `[\"OCCUPY\", integer]`.\n\t*/\n\toccupyMoves: function occupyMoves() {\n\t\tif (this.stage[0] === this.STAGES.OCCUPY) {\n\t\t\tvar territoryFrom = this.stage[1];\n\t\t\treturn Iterable.range(1, this.armyCount(territoryFrom)).map(function (armyCount) {\n\t\t\t\treturn [\"OCCUPY\", armyCount]; \n\t\t\t}).toArray();\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t},\n\t\n\t/** The moves for fortifications are arrays of the form `[\"FORTIFY\", territoryFrom, territoryTo, integer]`.\n\t*/\n\tfortifyMoves: function fortifyMoves() {\n\t\tvar result = [this.PASS_MOVE];\n\t\tif (this.stage[0] === this.STAGES.FORTIFY) {\n\t\t\tvar game = this,\n\t\t\t\tactivePlayer = this.activePlayer();\n\t\t\tresult = result.concat(iterable(this.boardMap.adjacents).mapApply(function (t1, ts) {\n\t\t\t\tvar p1 = game.playerOf(t1),\n\t\t\t\t\tarmyCount = game.armyCount(t1);\n\t\t\t\tif (p1 === activePlayer && armyCount > 1) {\n\t\t\t\t\treturn iterable(ts).filter(function (t2) {\n\t\t\t\t\t\treturn game.playerOf(t2) === activePlayer;\n\t\t\t\t\t}).product(Iterable.range(1, armyCount)).mapApply(function (t2, c) {\n\t\t\t\t\t\treturn [\"FORTIFY\", t1, t2, c];\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn Iterable.EMPTY;\n\t\t\t\t}\n\t\t\t}).flatten().toArray());\n\t\t}\n\t\treturn result;\n\t},\n\t\n\t// ## Movements validation #####################################################################\n\t\n\tisValidReinforce: function isValidReinforce(move, onError){ \n\t\tvar stage = this.stage;\n\t\tif(stage[0] !== this.STAGES.REINFORCE){\n\t\t\tif (onError) onError(\"Cannot reinforce in this stage (\" + stage + \")!\");\n\t\t\treturn false;\n\t\t}\t\t\n\t\tvar remaining = stage[1] - move[2];\n\t\tif(!Math.floor(remaining + 1) || remaining < 0 || move[2] < 1 ){ \n\t\t\tif (onError) onError(\"Cannot reinforce \" + move[2] + \" armies!\");\n\t\t\treturn false;\n\t\t} \n\t\tvar armies = this.uncompressGameState(this.armies),\n\t\t\tactivePlayer = this.activePlayer();\n\t\tif(!armies[move[1]] || armies[move[1]][0] !== activePlayer){\n\t\t\tif (onError) onError(\"Cannot reinforce territory \" + move[1] + \" because active player \" + activePlayer + \" does not own it!\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t\t\n\t},\n\t\n\tisValidAttack: function isValidAttack(move, onError){\n\t\tvar armies = this.uncompressGameState(this.armies),\n\t\t\tstage = this.stage,\n\t\t\tactivePlayer = this.activePlayer();\n\t\tif(stage[0] !== this.STAGES.ATTACK){\n\t\t\tif (onError) onError(\"Cannot attack in this stage (\" + stage + \")!\");\n\t\t\treturn false;\n\t\t}\t\n\t\tif(!armies[move[1]] || armies[move[1]][0] !== activePlayer){\n\t\t\tif (onError) onError(\"Cannot attack from \" + move[1] + \"!\");\n\t\t\treturn false;\n\t\t}\n\t\tif(!armies[move[2]] || armies[move[2]][0] === activePlayer){\n\t\t\tif (onError) onError(\"Cannot attack to \" + move[2] + \"!\");\n\t\t\treturn false;\n\t\t}\n\t\tvar remaining = armies[move[1]][1] - move[3];\n\t\tif(!Math.floor(remaining + 1) || remaining < 1 || move[3] > 3 || move[3] < 1){ \n\t\t\tif (onError) onError(\"Cannot attack with \" + move[3] + \" armies!\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\t\n\t},\n\t\n\tisValidOccupy: function isValidOccupy(move, onError){\n\t\tvar stage = this.stage;\n\t\tif(stage[0] !== this.STAGES.OCCUPY) {\n\t\t\tif (onError) onError(\"Cannot occupy in this stage (\" + stage + \")!\");\n\t\t\treturn false;\n\t\t}\n\t\tvar armies = this.uncompressGameState(this.armies),\n\t\t\tactivePlayer = this.activePlayer(), \n\t\t\tremaining = armies[stage[1]][1] - move[1];\n\t\tif(remaining < 1 || !Math.floor(move[1]) || armies[stage[1]][1] < move[1] || move[1] < 1){\n\t\t\tif (onError) onError(\"Cannot occupy territory \" + stage[2] + \" with \" + move[1] + \" armies!\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\t\n\t},\n\t\n\tisValidFortify: function isValidFortify(move, onError){\n\t\tvar stage = this.stage;\n\t\tif(stage[0] !== this.STAGES.FORTIFY) {\n\t\t\tif (onError) onError(\"Cannot fortify in this stage (\" + stage + \")!\");\n\t\t\treturn false;\n\t\t}\n\t\tvar armies = this.uncompressGameState(this.armies),\n\t\t\tactivePlayer = this.activePlayer();\n\t\tif(!armies[move[1]] || armies[move[1]][0] !== activePlayer){\n\t\t\tif (onError) onError(\"Cannot fortify from territory \" + move[1] + \"!\");\n\t\t\treturn false;\n\t\t}\n\t\tif(!armies[move[2]] || armies[move[2]][0] !== activePlayer || !this.boardMap.adjacent(move[1], move[2])){\n\t\t\tif (onError) onError(\"Cannot fortify to territory \" + move[2] + \"!\");\n\t\t\treturn false;\n\t\t}\n\t\tif(!Math.floor(move[3]) || move[3] < 1 || armies[move[1]][1] <= move[3]){\n\t\t\tif (onError) onError(\"Cannot fortify with \" + move[3] + \" armies!\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\t\n\t},\n\t\n\t// ## Application of moves #####################################################################\n\t\n\t/** The `next` method returns a new game state as a modification of this one. \n\t*/\n\tnext: function next(moves, haps) {\n\t\tvar activePlayer = this.activePlayer(),\n\t\t\tmove = moves[activePlayer];\n\t\traiseIf(!move, \"Active player has no moves!\");\n\t\tswitch (move[0]) {\n\t\t\tcase \"REINFORCE\": return this.nextReinforce(move);\n\t\t\tcase \"ATTACK\":    return this.nextAttack(move, haps);\n\t\t\tcase \"OCCUPY\":    return this.nextOccupy(move);\n\t\t\tcase \"FORTIFY\":   return this.nextFortify(move);\n\t\t\tcase \"PASS\":      return this.nextPass(move);\n\t\t\tdefault:          raise(\"Invalid move < \", JSON.stringify(move), \" >!\");\n\t\t}\n\t},\n\t\n\t/** A reinforcements increments the number of armies in one of the territories occupied by the\n\tactive player. The `move` should be in the form `[\"REINFORCE\", territory, amount]` and the \n\tgame's `stage` should be in the form `[STAGES.REINFORCE, amount]`.\n\t*/\n\tnextReinforce: function nextReinforce(move) {\n\t\tif (this.isValidReinforce(move, raise)){\n\t\t\tvar stage = this.stage, \n\t\t\t\tarmies = this.uncompressGameState(this.armies),\n\t\t\t\tremaining = stage[1] - move[2],\n\t\t\t\tactivePlayer = this.activePlayer();\n\t\t\tarmies[move[1]][1] += move[2];\n\t\t\treturn new this.constructor({\n\t\t\t\tboardMap: this.boardMap,\n\t\t\t\tstage: remaining > 0 ? [this.STAGES.REINFORCE, remaining] : [this.STAGES.ATTACK],\n\t\t\t\tround: this.round,\n\t\t\t\trounds: this.rounds,\n\t\t\t\tarmies: armies,\n\t\t\t\tactivePlayer: activePlayer\n\t\t\t});\t\n\t\t}\t\n\t},\n\n\t/** Attacks are the only instances of non-determinism in this game. The `move` \n\tshould be in the form `[\"ATTACK\", territoryFrom, territoryTo, amount]`, and the `haps` should\n\tbe in the form `{ attack: amount, defence: amount }`.\n\t*/\n\tnextAttack: function nextAttack(move, haps) {\n\t\tvar stage = this.stage,\n\t\t\tactivePlayer = this.activePlayer();\n\t\t//this.isValidAttack(move);\n\t\t\n\t\t\n\t\t//raiseIf(!control[0], control[1]);\n\t\t\t\n\t\t//raiseIf(stage[0] !== this.STAGES.ATTACK,\n\t\t//\t\"Cannot attack in this stage (\", stage, \")!\");\n\t\t\n\t\tif (!haps) { // Dice rolls are provided.\n\t\t\tvar aleaKey = 'A'+ move[3] +'D'+ Math.min(2, this.armyCount(move[2])),\n\t\t\t\talea = ATTACK_ALEATORIES[aleaKey];\n\t\t\traiseIf(!alea, \"Could not find aleatory for \", aleaKey, \"!\");\n\t\t\treturn new ludorum.Contingent({ rolls: alea }, this, base.obj(activePlayer, move));\n\t\t} else { // Dice rolls not available.\n\t\t\tif(this.isValidAttack(move, raise)){\n\t\t\t\tvar armies = this.uncompressGameState(this.armies);\n\t\t\t\t\n/* \t\t\t\traiseIf(!armies[move[1]] || armies[move[1]][0] !== activePlayer,\n\t\t\t\t\t\"Cannot attack from \", move[1], \"!\");\n\t\t\t\traiseIf(!armies[move[2]] || armies[move[2]][0] === activePlayer,\n\t\t\t\t\t\"Cannot attack to \", move[1], \"!\"); */\n\t\t\t\tarmies[move[1]][1] += haps.rolls.attack; // Change the board.\n\t\t\t\tarmies[move[2]][1] += haps.rolls.defence;\n\t\t\t\tvar conquest = armies[move[2]][1] < 1;\n\t\t\t\tif (conquest) {\n\t\t\t\t\tarmies[move[2]][0] = activePlayer;\n\t\t\t\t}\n\t\t\t\treturn new this.constructor({\n\t\t\t\t\tboardMap: this.boardMap,\n\t\t\t\t\tstage: conquest ? [this.STAGES.OCCUPY, move[1], move[2]] : this.stage,\n\t\t\t\t\tround: this.round,\n\t\t\t\t\trounds: this.rounds,\n\t\t\t\t\tarmies: armies,\n\t\t\t\t\tactivePlayer: this.activePlayer()\n\t\t\t\t});\n\t\t\t}\n\t\t}//*/\n\t\t\n\t\t\n\t},\n\t\n\t/** After a successful attack the attacker must occupy the conquered territory. The `move` \n\tshould be in the form `[\"OCCUPY\", integer]`.\n\t*/\n\tnextOccupy: function nextOccupy(move) {\n\t\t\n/*\t\tvar stage = this.stage;\n\t\t\n \t\traiseIf(stage[0] !== this.STAGES.OCCUPY,\n\t\t\t\"Cannot occupy in this stage (\", stage, \")!\");\n\t\t\n\t\traiseIf(armies[stage[1]][1] < move[1] || move[1] < 1,\n\t\t\t\"Cannot occupy territory \", stage[2], \" with \", move[1], \" armies!\"); */\n\t\tif(this.isValidOccupy(move, raise)){\n\t\t\tvar stage = this.stage,\n\t\t\t\tarmies = this.uncompressGameState(this.armies),\n\t\t\t\tactivePlayer = this.activePlayer();\n\t\t\tarmies[stage[1]][1] -= move[1]; // Change the board.\n\t\t\tarmies[stage[2]] = [activePlayer, move[1]];\n\t\t\treturn new this.constructor({\n\t\t\t\tboardMap: this.boardMap,\n\t\t\t\tstage: [this.STAGES.ATTACK],\n\t\t\t\tround: this.round,\n\t\t\t\trounds: this.rounds,\n\t\t\t\tarmies: armies,\n\t\t\t\tactivePlayer: activePlayer\n\t\t\t});\n\t\t}\n\t},\n\t\n\t/** The last move in a turn can be a fortification, which is a movement of armies from one of \n\tthe active player's turn to another. The `move` should be in the form \n\t`[\"FORTIFY\", territoryFrom, territoryTo, amount]`.\n\t*/\n\tnextFortify: function nextFortify(move) {\n\t\t\n\t\tif(this.isValidFortify(move, raise)){\n\t\t\t/* var stage = this.stage;\n\t\t\traiseIf(stage[0] !== this.STAGES.FORTIFY,\n\t\t\t\t\"Cannot fortify in this stage (\", stage, \")!\");\n\n\t\t\traiseIf(!armies[move[1]] || armies[move[1]][0] !== activePlayer,\n\t\t\t\t\"Cannot fortify from territory \", move[1], \"!\");\n\t\t\traiseIf(!armies[move[2]] || armies[move[2]][0] !== activePlayer,\n\t\t\t\t\"Cannot fortify to territory \", move[2], \"!\");\n\t\t\traiseIf(move[3] < 1 || armies[move[1]][1] <= move[3],\n\t\t\t\t\"Cannot fortify with \", move[3], \" armies!\"); */\n\t\t\tvar armies = this.uncompressGameState(this.armies),\n\t\t\t\tactivePlayer = this.activePlayer();\n\t\t\tarmies[move[1]][1] -= move[3]; // Change the board.\n\t\t\tarmies[move[2]][1] += move[3];\n\t\t\treturn new this.constructor(this.__advanceTurn__({\n\t\t\t\tboardMap: this.boardMap,\n\t\t\t\tstage: null, // constructor will initialize this.\n\t\t\t\tround: this.round,\n\t\t\t\trounds: this.rounds,\n\t\t\t\tarmies: armies,\n\t\t\t\tactivePlayer: activePlayer\n\t\t\t}));\n\t\t}\n\t},\n\t\n\t/** Attacks and fortifications can be passed. The `move` should be in the form `[\"PASS\"]`.\n\t*/\n\tnextPass: function nextPass(moves) {\n\t\tvar params = {\n\t\t\tboardMap: this.boardMap,\n\t\t\tround: this.round,\n\t\t\trounds: this.rounds,\n\t\t\tarmies: this.armies,\n\t\t\tactivePlayer: this.activePlayer()\n\t\t};\n\t\tswitch (this.stage[0]) {\n\t\t\tcase this.STAGES.REINFORCE:\n\t\t\t\tparams.stage = [this.STAGES.ATTACK];\n\t\t\t\tbreak;\n\t\t\tcase this.STAGES.ATTACK: \n\t\t\t\tparams.stage = [this.STAGES.FORTIFY];\n\t\t\t\tbreak;\n\t\t\tcase this.STAGES.OCCUPY:\n\t\t\t\traise(\"Cannot pass!\");\n\t\t\t\tbreak;\n\t\t\tcase this.STAGES.FORTIFY:\n\t\t\t\tparams = this.__advanceTurn__(params);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn new this.constructor(params);\n\t},\n\t\n\t/** To get to the next turn this method takes the `params` for the constructor and changes the\n\tactive player to the next player.\n\t*/\n\t__advanceTurn__: function __advanceTurn__(params) {\n\t\tvar nextPlayer = (this.players.indexOf(params.activePlayer) + 1) % this.players.length;\n\t\tfor (var i = 0; i < this.players.length; i++){\n\t\t\tif (nextPlayer === 0) {\n\t\t\t\tparams.round++;\n\t\t\t}\n\t\t\tif(this.playerTerritories(this.players[nextPlayer]).length > 0){\n\t\t\t\tparams.activePlayer = this.players[nextPlayer];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnextPlayer = (nextPlayer + 1) % this.players.length;\n\t\t}\n\t\treturn params;\n\t},\n\t\n\t// ## Utility methods ##########################################################################\n\t\n\t/** Serialization and materialization using Sermat.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Risk',\n\t\tserializer: function serialize_Risk(obj) {\n\t\t\treturn this.serializeAsProperties(obj, ['boardMap', 'stage', 'round', 'rounds', 'armies'], true);\n\t\t}\n\t},\n\t\n\t/** An `armyAleatoryDistribution` is an object with a property for every territory in the map, \n\tmapping to an aleatory array `[\"<territory>\", <armiesNumber>]`.\n\t*/\n\t'static armyAleatoryDistribution': function armyAleatoryDistribution(players, boardMap) {\n\t\tvar armies = {},\n\t\t\tterritories = boardMap.territories,\n\t\t\tvec0 = Iterable.range(players.length).toArray(),\n\t\t\tvec = vec0.slice();\n\t\tterritories.forEach(function(t) {\n\t\t\tif (vec.length < 1){\n\t\t\t\tvec = vec0.slice();\n\t\t\t}\n\t\t\tvar aux = Math.floor(Math.random() * vec.length);\n\t\t\tarmies[t] = [players[vec[aux]], Math.floor(Math.random() * 10) + 1];\n\t\t\tvec.splice(aux, 1);\n\t\t});\n\t\treturn armies;\n\t},\n\t\n\t/** An `armyDistribution` is an object with a property for every territory in the map, \n\tmapping to an array `[\"<territory>\", <armiesNumber>]`.\n\t*/\n\t'static armyDistribution': function armyDistribution(players, boardMap) {\n\t\tvar armies = {},\n\t\t\tterritories = boardMap.territories,\n\t\t\tvec0 = Iterable.range(players.length).toArray(),\n\t\t\tvec = vec0.slice(),\n\t\t\tvecArmies = [20, 20, 20, 20, 20, 20],\n\t\t\tcount = 6;\n\t\t\t\n\t\tterritories.forEach(function(t) {\n\t\t\tif (vec.length < 1){\n\t\t\t\tvec = vec0.slice();\n\t\t\t\t--count;\n\t\t\t}\n\t\t\tvar aux = Math.floor(Math.random() * vec.length);\n\t\t\tarmies[t] = [players[vec[aux]], Math.floor(Math.random() * (vecArmies[vec[aux]] - count)) + 1];\n\t\t\tvecArmies[vec[aux]] -= armies[t][1];\n\t\t\tvec.splice(aux, 1);\n\t\t});\n\t\treturn armies;\n\t}\t\n}); // declare Risk","/** # Risk players\r\n\r\nAutomatic players for Risk.\r\n*/\r\nvar players = exports.players = {};\r\n\r\n/** ## Heuristics ##################################################################################\r\n\r\nHeuristic functions that may be used in MCTS or MiniMax. Risk is very complex, so if one of these\r\nalgorithms is used, expect decisions of the automatic player to take a considerable amount of time.\r\n*/\r\nplayers.heuristics = {\r\n\t/** + `territoryCount` returns the proportion of territories a given player controls.\r\n\t*/\r\n\tterritoryCount: function territoryCount(game, player) {\r\n\t\treturn game.playerTerritories(player).length / game.boardMap.territories.length;\r\n\t},\r\n\t\r\n\t/** + `continentCount` returns the proportion of continents a given player controls.\r\n\t*/\r\n\tcontinentCount: function continentCount(game, player) {\r\n\t\treturn game.playerContinents(player).length / game.boardMap.continents.length;\r\n\t},\r\n\t\r\n\t/** + ``\r\n\t*/\r\n\tterritoryHeuristic: function territoryHeuristic(game, player) {\r\n\t\tvar armies = game.uncompressGameState(game.armies),\r\n\t\t\tcounts = {},\r\n\t\t\ttotalCount = 0;\r\n\t\titerable(armies).forEachApply(function (n, t) {\r\n\t\t\tcounts[t[0]] = (counts[t[0]] |0) + 1;\r\n\t\t\ttotalCount++;\r\n\t\t});\r\n\t\tvar countMax = -Infinity,\r\n\t\t\tcountMin = +Infinity,\r\n\t\t\tplayerCount = 0;\r\n\t\titerable(counts).forEachApply(function (p, c) {\r\n\t\t\tif (countMax < c) countMax = c;\r\n\t\t\tif (countMin > c) countMin = c;\r\n\t\t\tplayerCount++;\r\n\t\t});\r\n\t\treturn countMax === countMin ? 0 \r\n\t\t\t: ((counts[player] |0) - totalCount / playerCount) / (countMax - countMin);\r\n\t},\r\n\t\r\n\theuristicPru: function heuristicPru(game, player) {\r\n\t\t//return ((game.playerContinents(player).length + 1) / game.boardMap.continents.length) * (game.playerTerritories(player).length / game.boardMap.territories.length);\r\n\t\treturn (game.playerContinents(player).length * 4 + game.playerTerritories(player).length) / (game.boardMap.continents.length * 4 + game.boardMap.territories.length);\r\n\t},\r\n\theuristicReinforcements: function heuristicReinforcements(game, player) {\r\n\t\treturn game.playerReinforcements(player) / 38 - 0.5;\r\n\t},\r\n\theuristicConquestProbability: function heuristicConquestProbability(game, player) {\r\n\t\tvar count = 0;\r\n\t\treturn game.conflictFrontiers(player).mapApply(function (t1, t2){\r\n\t\t\tvar c1 = game.armyCount(t1),\r\n\t\t\t\tc2 = game.armyCount(t2);\r\n\t\t\tcount++;\r\n\t\t\treturn conquestProbability(c1, c2) - conquestProbability(c2, c1); \r\n\t\t}).sum() / count;\r\n\t},\r\n\theuristic2: function heuristic2(game, player) {\r\n\t\tvar b = 0.8;\r\n\t\treturn b * Risk.heuristics.heuristicPru(game, player) +\r\n\t\t\t(1 - b) * Risk.heuristics.heuristicConquestProbability(game, player);\r\n\t}\r\n\t//TODO\r\n};\t\r\n\r\n/** ## Simple player ###############################################################################\r\n\r\nTODO\r\n*/\r\nplayers.RiskSimplePlayer = declare(Player, {\r\n\tconstructor: function RiskSimplePlayer(params) {\r\n\t\tPlayer.call(this, params);\r\n\t\tthis.random = params.random || Randomness.DEFAULT;\r\n\t},\r\n\t\r\n\tdecision: function decision(game, role) {\r\n\t\tvar moves = game.moves()[role],\r\n\t\t\trandom = this.random,\r\n\t\t\tmove;\r\n\t\tswitch (game.stage[0]) { \r\n\t\t\tcase game.STAGES.REINFORCE:\r\n\t\t\t\treturn this.decisionReinforce(game, role);\r\n\t\t\tcase game.STAGES.ATTACK:\r\n\t\t\t\treturn this.decisionAttack(game, role);\r\n\t\t\tcase game.STAGES.OCCUPY:\r\n\t\t\t\treturn this.decisionOccupy(game, role);\r\n\t\t\tcase game.STAGES.FORTIFY:\r\n\t\t\t\treturn this.decisionFortify(game, role);\r\n\t\t}\r\n\t\traise(\"Unsupported stage \", game.stage[0], \"!\");\r\n\t},\r\n\t\r\n\tdecisionReinforce: function decisionReinforce(game, role) {\r\n\t\tvar moves = game.moves()[role],\r\n\t\t\trandom = this.random;\r\n\t\tvar frontiers = {};\r\n\t\tgame.conflictFrontiers(role).forEachApply(function (t1, t2) {\r\n\t\t\tfrontiers[t1] = (frontiers[t1] |0) + 1;\r\n\t\t});\r\n\t\tmoves = moves.filter(function (m) {\r\n\t\t\treturn frontiers.hasOwnProperty(m[1]);\r\n\t\t});\r\n\t\tmoves.sort(function (m1, m2) {\r\n\t\t\treturn frontiers[m2] - frontiers[m1]; // Descending order of frontier count.\r\n\t\t});\r\n\t\t// Random biased towards territories with more conflicting frontiers.\r\n\t\treturn moves[Math.min(random.randomInt(moves.length), random.randomInt(moves.length))];\r\n\t},\r\n\t\r\n\tdecisionAttack: function decisionAttack(game, role) {\r\n\t\tvar moves = game.moves()[role],\r\n\t\t\trandom = this.random;\r\n\t\tmoves = moves.filter(function (m) {\r\n\t\t\treturn m[0] === 'ATTACK' && m[3] === game.MAX_ATTACK;\r\n\t\t\t/* */\r\n\t\t});\r\n\t\treturn random.choice(moves) || game.PASS_MOVE;// como ponderar para que tenga preferencia el ataque por territorio que determina conq de cont\r\n\t},\r\n\t\r\n\tdecisionOccupy: function decisionOccupy(game, role) {\r\n\t\tvar moves = game.moves()[role];\r\n\t\tvar maxCount = iterable(moves).select(1).max();\r\n\t\treturn maxCount < 2 ? moves[0] : [\"OCCUPY\", maxCount - 1];\r\n\t},\r\n\t\r\n\tdecisionFortify: function decisionFortify(game, role) {\r\n\t\tvar moves = game.moves()[role],\r\n\t\t\trandom = this.random;\r\n\t\tmoves = moves.filter(function (m) {\r\n\t\t\treturn m[0] === 'FORTIFY' && game.armyCount(m[1]) - m[3] >= game.armyCount(m[2]);\r\n\t\t});\r\n\t\tmoves.sort(function (m1, m2) {\r\n\t\t\treturn m2[3] - m1[3]; // Descending order of amount.\r\n\t\t});\r\n\t\t// Random biased towards greater moves of armies. \r\n\t\treturn moves.length < 1 ? game.PASS_MOVE : moves[Math.min(random.randomInt(moves.length), random.randomInt(moves.length))];\r\n\t},\r\n\t\r\n\t// ### Utilities ###############################################################################\r\n\t\r\n\t'static __SERMAT__': {\r\n\t\tidentifier: 'RiskSimplePlayer',\r\n\t\tserializer: function serialize_RiskSimplePlayer(obj) {\r\n\t\t\tvar ser = Player.__SERMAT__.serializer(obj),\r\n\t\t\t\targs = ser[0];\r\n\t\t\targs.random = obj.random;\r\n\t\t\treturn ser;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n/** \r\nTODO\r\n*/\r\nplayers.RiskContinentPlayer = declare(Player, {\r\n\tconstructor: function RiskContinentPlayerPlayer(params) {\r\n\t\tparams = params || {};\r\n\t\tPlayer.call(this, params);\r\n\t\tthis.random = params.random || Randomness.DEFAULT;\r\n\t},\r\n\t\r\n\tdecision: function decision(game, role) {\r\n\t\tvar moves = game.moves()[role],\r\n\t\t\trandom = this.random,\r\n\t\t\tmove;\r\n\t\tswitch (game.stage[0]) { \r\n\t\t\tcase game.STAGES.REINFORCE:\r\n\t\t\t\treturn this.decisionReinforce(game, role);\r\n\t\t\tcase game.STAGES.ATTACK:\r\n\t\t\t\treturn this.decisionAttack(game, role);\r\n\t\t\tcase game.STAGES.OCCUPY:\r\n\t\t\t\treturn this.decisionOccupy(game, role);\r\n\t\t\tcase game.STAGES.FORTIFY:\r\n\t\t\t\treturn this.decisionFortify(game, role);\r\n\t\t}\r\n\t\traise(\"Unsupported stage \", game.stage[0], \"!\");\r\n\t},\r\n\t\r\n\ttargetContinent: function targetContinent(game, role) {\r\n\t\tvar continent = \"\",\r\n\t\t\tcount = 13;\r\n\t\titerable(game.playerPendingTerritories(role)).forEachApply(function (c, a) {\r\n\t\t\t\r\n\t\t\tif (a !== 0 && a < count && game.continentAdyacent(role, c)){\r\n\t\t\t\tcount = a;\r\n\t\t\t\tcontinent = c;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn continent;\r\n\t},\r\n\t\r\n\tdecisionReinforce: function decisionReinforce(game, role) {\r\n\t\tvar moves = game.moves()[role],\r\n\t\t\trandom = this.random;\r\n\t\tvar frontiers = {},\r\n\t\t\tcontinent = this.targetContinent(game, role);\r\n\t\tgame.conflictFrontiers(role).forEachApply(function (t1, t2) {\r\n\t\t\tif(game.boardMap.territoryContinent(t2) === continent){\r\n\t\t\t\tfrontiers[t1] = (frontiers[t1] |0) + 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmoves = moves.filter(function (m) {\r\n\t\t\treturn frontiers.hasOwnProperty(m[1]);\r\n\t\t\t\r\n\r\n\t\t});\r\n\t\tmoves.sort(function (m1, m2) {\r\n\t\t\treturn frontiers[m2] - frontiers[m1]; \r\n\t\t});\r\n\r\n\t\treturn moves[Math.min(random.randomInt(moves.length), random.randomInt(moves.length))];\r\n\t},\r\n\t\r\n\r\n\tdecisionAttack: function decisionAttack(game, role) {\r\n\t\tvar moves = game.moves()[role],\r\n\t\t\trandom = this.random,\r\n\t\t\tcontinent = this.targetContinent(game, role);\r\n\t\tmoves = moves.filter(function (m) {\r\n\t\t\treturn m[0] === 'ATTACK' && m[3] === game.MAX_ATTACK && game.boardMap.territoryContinent(m[2]) === continent || conquestProbability(game.armyCount(m[1]), game.armyCount(m[2]) > 0.75);\r\n\t\t});\r\n\t\treturn random.choice(moves) || game.PASS_MOVE;\r\n\t},\r\n\t\r\n\tdecisionOccupy: function decisionOccupy(game, role) {\r\n\t\tvar moves = game.moves()[role];\r\n\t\tvar maxCount = iterable(moves).select(1).max();\r\n\t\treturn maxCount < 2 ? moves[0] : [\"OCCUPY\", maxCount - 1];\r\n\t},\r\n\t\r\n\tdecisionFortify: function decisionFortify(game, role) {\r\n\t\t/*var moves = game.moves()[role],\r\n\t\t\trandom = this.random;\r\n\t\tmoves = moves.filter(function (m) {\r\n\t\t\treturn m[0] === 'FORTIFY' && game.armyCount(m[1]) - m[3] >= game.armyCount(m[2]);\r\n\t\t});\r\n\t\tmoves.sort(function (m1, m2) {\r\n\t\t\treturn m2[3] - m1[3]; // Descending order of amount.\r\n\t\t});\r\n\t\t// Random biased towards greater moves of armies. */\r\n\t\treturn [\"PASS\"];//moves.length < 1 ? game.PASS_MOVE : moves[Math.min(random.randomInt(moves.length), random.randomInt(moves.length))];\r\n\t},\r\n\t\r\n\t// ## Utilities ################################################################################\r\n\t\r\n\t'static __SERMAT__': {\r\n\t\tidentifier: 'RiskContinentPlayer',\r\n\t\tserializer: function serialize_RiskContinentPlayer(obj) {\r\n\t\t\tvar ser = Player.__SERMAT__.serializer(obj),\r\n\t\t\t\targs = ser[0];\r\n\t\t\targs.random = obj.random;\r\n\t\t\treturn ser;\r\n\t\t}\r\n\t}\r\n});","/** # Scenarios\r\n\r\nScenarios are maps with armies already distributed. They are used to test the automatic players and\r\nthe to assess the game.\r\n*/\r\nvar scenarios = exports.scenarios = (function () {\r\n\tvar armies = function (c, n) {\r\n\t\t\treturn [c, n|0];\r\n\t\t},\r\n\t\tWhite = armies.bind(null, \"White\"),\r\n\t\tYellow = armies.bind(null, \"Yellow\"),\r\n\t\tRed = armies.bind(null, \"Red\"),\r\n\t\tBlue = armies.bind(null, \"Blue\"),\r\n\t\tGreen = armies.bind(null, \"Green\"),\r\n\t\tBlack = armies.bind(null, \"Black\");\r\n\treturn iterable({\r\n\t\t/** ## White oceania #######################################################################\r\n\t\t\r\n\t\tThis scenario asigns the whole Oceania and 3 adjacent territories in Asia to the White \r\n\t\tplayer. All other players are scattered evenly on the rest of the map.\r\n\t\t*/\r\n\t\twhiteOceania: [\r\n\t\t\tGreen(12), //Afghanistan\r\n\t\t\tBlack(12), //Alaska\r\n\t\t\tBlue(12), //Alberta\r\n\t\t\tRed(9), //Argentina\r\n\t\t\tGreen(2), //Brazil\r\n\t\t\tYellow(12), //Central America\r\n\t\t\tWhite(6), //China\r\n\t\t\tBlack(2), //Congo\r\n\t\t\tBlue(1), //East Africa\r\n\t\t\tWhite(1), //Eastern Australia\r\n\t\t\tGreen(2), //Eastern United States\r\n\t\t\tYellow(2), //Egypt\r\n\t\t\tBlue(1), //Great Britain\r\n\t\t\tRed(2), //Greenland\r\n\t\t\tBlue(3), //Iceland\r\n\t\t\tWhite(6), //India\r\n\t\t\tWhite(1), //Indonesia\r\n\t\t\tYellow(1), //Irkutsk\r\n\t\t\tBlack(2), //Japan\r\n\t\t\tGreen(1), //Kamchatka\r\n\t\t\tBlack(1), //Madagascar\r\n\t\t\tYellow(2), //Middle East\r\n\t\t\tRed(4), //Mongolia\r\n\t\t\tWhite(1), //New Guinea\r\n\t\t\tRed(1), //North Africa\r\n\t\t\tBlue(1), //Northern Europe\r\n\t\t\tBlue(1), //Northwest Territory\r\n\t\t\tBlack(1), //Ontario\r\n\t\t\tGreen(1), //Peru\r\n\t\t\tYellow(1), //Quebec\r\n\t\t\tGreen(1), //Scandinavia\r\n\t\t\tWhite(4), //Siam\r\n\t\t\tYellow(1), //Siberia\r\n\t\t\tRed(1), //South Africa\r\n\t\t\tBlue(1), //Southern Europe\r\n\t\t\tBlack(1), //Ukraine\r\n\t\t\tRed(1), //Ural\r\n\t\t\tBlack(1), //Venezuela\r\n\t\t\tWhite(1), //Western Australia\r\n\t\t\tYellow(1), //Western Europe\r\n\t\t\tRed(2), //Western United States\r\n\t\t\tGreen(1) //Yakutsk\r\n\t\t],\r\n\t\t/** ## Black Oceania #######################################################################\r\n\t\t*/\r\n\t\tblackOceania: [\r\n\t\t\tGreen(12), //Afghanistan\r\n\t\t\tWhite(12), //Alaska\r\n\t\t\tBlue(12), //Alberta\r\n\t\t\tRed(9), //Argentina\r\n\t\t\tGreen(2), //Brazil\r\n\t\t\tYellow(12), //Central America\r\n\t\t\tBlack(6), //China\r\n\t\t\tWhite(2), //Congo\r\n\t\t\tBlue(1), //East Africa\r\n\t\t\tBlack(1), //Eastern Australia\r\n\t\t\tGreen(2), //Eastern United States\r\n\t\t\tYellow(2), //Egypt\r\n\t\t\tBlue(1), //Great Britain\r\n\t\t\tRed(2), //Greenland\r\n\t\t\tBlue(3), //Iceland\r\n\t\t\tBlack(6), //India\r\n\t\t\tBlack(1), //Indonesia\r\n\t\t\tYellow(1), //Irkutsk\r\n\t\t\tWhite(2), //Japan\r\n\t\t\tGreen(1), //Kamchatka\r\n\t\t\tWhite(1), //Madagascar\r\n\t\t\tYellow(2), //Middle East\r\n\t\t\tRed(4), //Mongolia\r\n\t\t\tBlack(1), //New Guinea\r\n\t\t\tRed(1), //North Africa\r\n\t\t\tBlue(1), //Northern Europe\r\n\t\t\tBlue(1), //Northwest Territory\r\n\t\t\tWhite(1), //Ontario\r\n\t\t\tGreen(1), //Peru\r\n\t\t\tYellow(1), //Quebec\r\n\t\t\tGreen(1), //Scandinavia\r\n\t\t\tBlack(4), //Siam\r\n\t\t\tYellow(1), //Siberia\r\n\t\t\tRed(1), //South Africa\r\n\t\t\tBlue(1), //Southern Europe\r\n\t\t\tWhite(1), //Ukraine\r\n\t\t\tRed(1), //Ural\r\n\t\t\tWhite(1), //Venezuela\r\n\t\t\tBlack(1), //Western Australia\r\n\t\t\tYellow(1), //Western Europe\r\n\t\t\tRed(2), //Western United States\r\n\t\t\tGreen(1) //Yakutsk\r\n\t\t],\r\n\t\t/** ## White Africa ########################################################################\r\n\t\t*/\r\n\t\twhiteAfrica: [\r\n\t\t\tGreen(12), //Afghanistan\r\n\t\t\tBlack(12), //Alaska\r\n\t\t\tBlue(12), //Alberta\r\n\t\t\tRed(9), //Argentina\r\n\t\t\tWhite(5), //Brazil\r\n\t\t\tYellow(12), //Central America\r\n\t\t\tBlack(2), //China\r\n\t\t\tWhite(1), //Congo\r\n\t\t\tWhite(4), //East Africa\r\n\t\t\tBlue(1), //Eastern Australia\r\n\t\t\tGreen(2), //Eastern United States\r\n\t\t\tWhite(5), //Egypt\r\n\t\t\tBlue(1), //Great Britain\r\n\t\t\tRed(2), //Greenland\r\n\t\t\tBlue(3), //Iceland\r\n\t\t\tYellow(2), //India\r\n\t\t\tBlack(1), //Indonesia\r\n\t\t\tYellow(1), //Irkutsk\r\n\t\t\tBlack(2), //Japan\r\n\t\t\tGreen(1), //Kamchatka\r\n\t\t\tWhite(1), //Madagascar\r\n\t\t\tYellow(2), //Middle East\r\n\t\t\tRed(4), //Mongolia\r\n\t\t\tRed(1), //New Guinea\r\n\t\t\tWhite(3), //North Africa\r\n\t\t\tBlue(1), //Northern Europe\r\n\t\t\tBlue(1), //Northwest Territory\r\n\t\t\tBlack(1), //Ontario\r\n\t\t\tGreen(1), //Peru\r\n\t\t\tYellow(1), //Quebec\r\n\t\t\tGreen(1), //Scandinavia\r\n\t\t\tGreen(2), //Siam\r\n\t\t\tYellow(1), //Siberia\r\n\t\t\tWhite(1), //South Africa\r\n\t\t\tBlue(1), //Southern Europe\r\n\t\t\tBlack(1), //Ukraine\r\n\t\t\tRed(1), //Ural\r\n\t\t\tBlack(1), //Venezuela\r\n\t\t\tRed(1), //Western Australia\r\n\t\t\tYellow(1), //Western Europe\r\n\t\t\tRed(2), //Western United States\r\n\t\t\tGreen(1) //Yakutsk\r\n\t\t],\r\n\t\t/** ## Black Africa ########################################################################\r\n\t\t*/\r\n\t\tblackAfrica: [\r\n\t\t\tGreen(12), //Afghanistan\r\n\t\t\tWhite(12), //Alaska\r\n\t\t\tBlue(12), //Alberta\r\n\t\t\tRed(9), //Argentina\r\n\t\t\tBlack(5), //Brazil\r\n\t\t\tYellow(12), //Central America\r\n\t\t\tWhite(2), //China\r\n\t\t\tBlack(1), //Congo\r\n\t\t\tBlack(4), //East Africa\r\n\t\t\tBlue(1), //Eastern Australia\r\n\t\t\tGreen(2), //Eastern United States\r\n\t\t\tBlack(5), //Egypt\r\n\t\t\tBlue(1), //Great Britain\r\n\t\t\tRed(2), //Greenland\r\n\t\t\tBlue(3), //Iceland\r\n\t\t\tYellow(2), //India\r\n\t\t\tWhite(1), //Indonesia\r\n\t\t\tYellow(1), //Irkutsk\r\n\t\t\tWhite(2), //Japan\r\n\t\t\tGreen(1), //Kamchatka\r\n\t\t\tBlack(1), //Madagascar\r\n\t\t\tYellow(2), //Middle East\r\n\t\t\tRed(4), //Mongolia\r\n\t\t\tRed(1), //New Guinea\r\n\t\t\tBlack(3), //North Africa\r\n\t\t\tBlue(1), //Northern Europe\r\n\t\t\tBlue(1), //Northwest Territory\r\n\t\t\tWhite(1), //Ontario\r\n\t\t\tGreen(1), //Peru\r\n\t\t\tYellow(1), //Quebec\r\n\t\t\tGreen(1), //Scandinavia\r\n\t\t\tGreen(2), //Siam\r\n\t\t\tYellow(1), //Siberia\r\n\t\t\tBlack(1), //South Africa\r\n\t\t\tBlue(1), //Southern Europe\r\n\t\t\tWhite(1), //Ukraine\r\n\t\t\tRed(1), //Ural\r\n\t\t\tWhite(1), //Venezuela\r\n\t\t\tRed(1), //Western Australia\r\n\t\t\tYellow(1), //Western Europe\r\n\t\t\tRed(2), //Western United States\r\n\t\t\tGreen(1) //Yakutsk\r\n\t\t],\r\n\t\t/** ## Spread out ##########################################################################\r\n\t\t*/\r\n\t\tspreadOut: [\r\n\t\t\tYellow(3), //Afghanistan\r\n\t\t\tWhite(3), //Alaska\r\n\t\t\tWhite(3), //Alberta\r\n\t\t\tWhite(2), //Argentina\r\n\t\t\tGreen(3), //Brazil\r\n\t\t\tBlue(2), //Central America\r\n\t\t\tWhite(4), //China\r\n\t\t\tBlue(3), //Congo\r\n\t\t\tYellow(4), //East Africa\r\n\t\t\tGreen(2), //Eastern Australia\r\n\t\t\tBlack(6), //Eastern United States\r\n\t\t\tRed(3), //Egypt\r\n\t\t\tRed(4), //Great Britain\r\n\t\t\tWhite(1), //Greenland\r\n\t\t\tRed(2), //Iceland\r\n\t\t\tYellow(3), //India\r\n\t\t\tGreen(4), //Indonesia\r\n\t\t\tWhite(5), //Irkutsk\r\n\t\t\tGreen(4), //Japan\r\n\t\t\tRed(3), //Kamchatka\r\n\t\t\tRed(2), //Madagascar\r\n\t\t\tYellow(3), //Middle East\r\n\t\t\tBlack(5), //Mongolia\r\n\t\t\tBlack(3), //New Guinea\r\n\t\t\tBlack(2), //North Africa\r\n\t\t\tGreen(1), //Northern Europe\r\n\t\t\tYellow(2), //Northwest Territory\r\n\t\t\tYellow(2), //Ontario\r\n\t\t\tBlue(2), //Peru\r\n\t\t\tGreen(4), //Quebec\r\n\t\t\tBlue(3), //Scandinavia\r\n\t\t\tYellow(3), //Siam\r\n\t\t\tBlack(1), //Siberia\r\n\t\t\tRed(3), //South Africa\r\n\t\t\tBlack(1), //Southern Europe\r\n\t\t\tBlue(3), //Ukraine\r\n\t\t\tGreen(2), //Ural\r\n\t\t\tWhite(2), //Venezuela\r\n\t\t\tRed(3), //Western Australia\r\n\t\t\tBlue(3), //Western Europe\r\n\t\t\tBlue(4), //Western United States\r\n\t\t\tBlack(2) //Yakutsk\r\n\t\t],\r\n\t\t/** ## Spread out Black ####################################################################\r\n\t\t*/\r\n\t\tspreadOutBlack: [\r\n\t\t\tYellow(3), //Afghanistan\r\n\t\t\tBlack(3), //Alaska\r\n\t\t\tBlack(3), //Alberta\r\n\t\t\tBlack(2), //Argentina\r\n\t\t\tGreen(3), //Brazil\r\n\t\t\tBlue(2), //Central America\r\n\t\t\tBlack(4), //China\r\n\t\t\tBlue(3), //Congo\r\n\t\t\tYellow(4), //East Africa\r\n\t\t\tGreen(2), //Eastern Australia\r\n\t\t\tWhite(6), //Eastern United States\r\n\t\t\tRed(3), //Egypt\r\n\t\t\tRed(4), //Great Britain\r\n\t\t\tBlack(1), //Greenland\r\n\t\t\tRed(2), //Iceland\r\n\t\t\tYellow(3), //India\r\n\t\t\tGreen(4), //Indonesia\r\n\t\t\tBlack(5), //Irkutsk\r\n\t\t\tGreen(4), //Japan\r\n\t\t\tRed(3), //Kamchatka\r\n\t\t\tRed(2), //Madagascar\r\n\t\t\tYellow(3), //Middle East\r\n\t\t\tWhite(5), //Mongolia\r\n\t\t\tWhite(3), //New Guinea\r\n\t\t\tWhite(2), //North Africa\r\n\t\t\tGreen(1), //Northern Europe\r\n\t\t\tYellow(2), //Northwest Territory\r\n\t\t\tYellow(2), //Ontario\r\n\t\t\tBlue(2), //Peru\r\n\t\t\tGreen(4), //Quebec\r\n\t\t\tBlue(3), //Scandinavia\r\n\t\t\tYellow(3), //Siam\r\n\t\t\tWhite(1), //Siberia\r\n\t\t\tRed(3), //South Africa\r\n\t\t\tWhite(1), //Southern Europe\r\n\t\t\tBlue(3), //Ukraine\r\n\t\t\tGreen(2), //Ural\r\n\t\t\tBlack(2), //Venezuela\r\n\t\t\tRed(3), //Western Australia\r\n\t\t\tBlue(3), //Western Europe\r\n\t\t\tBlue(4), //Western United States\r\n\t\t\tWhite(2) //Yakutsk\r\n\t\t],\r\n\t\t/** ## Spread out version 2 ################################################################\r\n\t\t*/\r\n\t\tspreadOutV2: [\r\n\t\t\tBlack(3), //Afghanistan\r\n\t\t\tYellow(3), //Alaska\r\n\t\t\tBlue(3), //Alberta\r\n\t\t\tGreen(2), //Argentina\r\n\t\t\tRed(3), //Brazil\r\n\t\t\tBlack(3), //Central America\r\n\t\t\tYellow(3), //China\r\n\t\t\tWhite(3), //Congo\r\n\t\t\tGreen(3), //East Africa\r\n\t\t\tBlack(4), //Eastern Australia\r\n\t\t\tYellow(3), //Eastern United States\r\n\t\t\tYellow(3), //Egypt\r\n\t\t\tWhite(3), //Great Britain\r\n\t\t\tBlue(3), //Greenland\r\n\t\t\tRed(3), //Iceland\r\n\t\t\tBlue(3), //India\r\n\t\t\tGreen(5), //Indonesia\r\n\t\t\tRed(3), //Irkutsk\r\n\t\t\tBlack(1), //Japan\r\n\t\t\tGreen(3), //Kamchatka\r\n\t\t\tRed(2), //Madagascar\r\n\t\t\tWhite(3), //Middle East\r\n\t\t\tWhite(1), //Mongolia\r\n\t\t\tWhite(5), //New Guinea\r\n\t\t\tBlack(3), //North Africa\r\n\t\t\tGreen(3), //Northern Europe\r\n\t\t\tBlack(3), //Northwest Territory\r\n\t\t\tGreen(3), //Ontario\r\n\t\t\tWhite(2), //Peru\r\n\t\t\tWhite(3), //Quebec\r\n\t\t\tBlack(3), //Scandinavia\r\n\t\t\tRed(3), //Siam\r\n\t\t\tGreen(1), //Siberia\r\n\t\t\tBlue(2), //South Africa\r\n\t\t\tBlue(3), //Southern Europe\r\n\t\t\tRed(3), //Ukraine\r\n\t\t\tBlue(3), //Ural\r\n\t\t\tBlue(3), //Venezuela\r\n\t\t\tYellow(4), //Western Australia\r\n\t\t\tYellow(3), //Western Europe\r\n\t\t\tRed(3), //Western United States\r\n\t\t\tYellow(1) //Yakutsk\t\r\n\t\t],\r\n\t\t/** ## Spread out E1 #######################################################################\r\n\t\t*/\r\n\t\tspreadOute1: [\r\n\t\t\tWhite(3), //Afghanistan\r\n\t\t\tRed(2), //Alaska\r\n\t\t\tYellow(4), //Alberta\r\n\t\t\tBlue(3), //Argentina\r\n\t\t\tGreen(2), //Brazil\r\n\t\t\tRed(2), //Central America\r\n\t\t\tRed(4), //China\r\n\t\t\tBlack(2), //Congo\r\n\t\t\tRed(5), //East Africa\r\n\t\t\tYellow(3), //Eastern Australia\r\n\t\t\tWhite(4), //Eastern United States\r\n\t\t\tBlack(2), //Egypt\r\n\t\t\tYellow(2), //Great Britain\r\n\t\t\tRed(1), //Greenland\r\n\t\t\tGreen(3), //Iceland\r\n\t\t\tRed(4), //India\r\n\t\t\tBlack(3), //Indonesia\r\n\t\t\tYellow(3), //Irkutsk\r\n\t\t\tWhite(2), //Japan\r\n\t\t\tWhite(4), //Kamchatka\r\n\t\t\tYellow(1), //Madagascar\r\n\t\t\tGreen(1), //Middle East\r\n\t\t\tBlue(1), //Mongolia\r\n\t\t\tBlue(4), //New Guinea\r\n\t\t\tYellow(3), //North Africa\r\n\t\t\tBlack(2), //Northern Europe\r\n\t\t\tGreen(4), //Northwest Territory\r\n\t\t\tRed(2), //Ontario\r\n\t\t\tBlack(3), //Peru\r\n\t\t\tGreen(4), //Quebec\r\n\t\t\tBlue(4), //Scandinavia\r\n\t\t\tBlack(4), //Siam\r\n\t\t\tGreen(3), //Siberia\r\n\t\t\tGreen(3), //South Africa\r\n\t\t\tWhite(2), //Southern Europe\r\n\t\t\tBlue(3), //Ukraine\r\n\t\t\tBlack(4), //Ural\r\n\t\t\tWhite(1), //Venezuela\r\n\t\t\tBlue(2), //Western Australia\r\n\t\t\tBlue(3), //Western Europe\r\n\t\t\tYellow(4), //Western United States\r\n\t\t\tWhite(4) //Yakutsk\r\n\t\t],\r\n\t\t/** ## White spread out ####################################################################\r\n\t\t*/\r\n\t\twhiteSpreadOut: [\r\n\t\t\tBlue(1), //Afghanistan\r\n\t\t\tBlack(1), //Alaska\r\n\t\t\tBlack(2), //Alberta\r\n\t\t\tYellow(1), //Argentina\r\n\t\t\tYellow(1), //Brazil\r\n\t\t\tYellow(12), //Central America\r\n\t\t\tGreen(1), //China\r\n\t\t\tYellow(2), //Congo\r\n\t\t\tBlue(1), //East Africa\r\n\t\t\tWhite(1), //Eastern Australia\r\n\t\t\tWhite(6), //Eastern United States\r\n\t\t\tBlue(12), //Egypt\r\n\t\t\tRed(1), //Great Britain\r\n\t\t\tWhite(1), //Greenland\r\n\t\t\tRed(1), //Iceland\r\n\t\t\tBlue(1), //India\r\n\t\t\tGreen(2), //Indonesia\r\n\t\t\tBlack(2), //Irkutsk\r\n\t\t\tWhite(1), //Japan\r\n\t\t\tBlack(12), //Kamchatka\r\n\t\t\tBlue(1), //Madagascar\r\n\t\t\tBlue(3), //Middle East\r\n\t\t\tGreen(1), //Mongolia\r\n\t\t\tGreen(2), //New Guinea\r\n\t\t\tYellow(2), //North Africa\r\n\t\t\tWhite(4), //Northern Europe\r\n\t\t\tBlack(1), //Northwest Territory\r\n\t\t\tBlack(1), //Ontario\r\n\t\t\tWhite(1), //Peru\r\n\t\t\tBlack(1), //Quebec\r\n\t\t\tRed(4), //Scandinavia\r\n\t\t\tGreen(1), //Siam\r\n\t\t\tGreen(12), //Siberia\r\n\t\t\tBlue(1), //South Africa\r\n\t\t\tRed(2), //Southern Europe\r\n\t\t\tRed(9), //Ukraine\r\n\t\t\tRed(1), //Ural\r\n\t\t\tYellow(1), //Venezuela\r\n\t\t\tGreen(1), //Western Australia\r\n\t\t\tRed(2), //Western Europe\r\n\t\t\tYellow(1), //Western United States\r\n\t\t\tWhite(6) //Yakutsk\t\r\n\t\t],\r\n\t\t/** ## Black spread out ####################################################################\r\n\t\t*/\r\n\t\tblackSpreadOut: [\r\n\t\t\tBlue(1), //Afghanistan\r\n\t\t\tWhite(1), //Alaska\r\n\t\t\tWhite(2), //Alberta\r\n\t\t\tYellow(1), //Argentina\r\n\t\t\tYellow(1), //Brazil\r\n\t\t\tYellow(12), //Central America\r\n\t\t\tGreen(1), //China\r\n\t\t\tYellow(2), //Congo\r\n\t\t\tBlue(1), //East Africa\r\n\t\t\tBlack(1), //Eastern Australia\r\n\t\t\tBlack(6), //Eastern United States\r\n\t\t\tBlue(12), //Egypt\r\n\t\t\tRed(1), //Great Britain\r\n\t\t\tBlack(1), //Greenland\r\n\t\t\tRed(1), //Iceland\r\n\t\t\tBlue(1), //India\r\n\t\t\tGreen(2), //Indonesia\r\n\t\t\tWhite(2), //Irkutsk\r\n\t\t\tBlack(1), //Japan\r\n\t\t\tWhite(12), //Kamchatka\r\n\t\t\tBlue(1), //Madagascar\r\n\t\t\tBlue(3), //Middle East\r\n\t\t\tGreen(1), //Mongolia\r\n\t\t\tGreen(2), //New Guinea\r\n\t\t\tYellow(2), //North Africa\r\n\t\t\tBlack(4), //Northern Europe\r\n\t\t\tWhite(1), //Northwest Territory\r\n\t\t\tWhite(1), //Ontario\r\n\t\t\tBlack(1), //Peru\r\n\t\t\tWhite(1), //Quebec\r\n\t\t\tRed(4), //Scandinavia\r\n\t\t\tGreen(1), //Siam\r\n\t\t\tGreen(12), //Siberia\r\n\t\t\tBlue(1), //South Africa\r\n\t\t\tRed(2), //Southern Europe\r\n\t\t\tRed(9), //Ukraine\r\n\t\t\tRed(1), //Ural\r\n\t\t\tYellow(1), //Venezuela\r\n\t\t\tGreen(1), //Western Australia\r\n\t\t\tRed(2), //Western Europe\r\n\t\t\tYellow(1), //Western United States\r\n\t\t\tBlack(6) //Yakutsk\t\r\n\t\t],\r\n\t\t/** ## All totalities but White ############################################################\r\n\t\t*/\r\n\t\tallTotalitiesButWhite: [\r\n\t\t\tWhite(6), //Afghanistan\r\n\t\t\tBlack(5), //Alaska\r\n\t\t\tBlack(2), //Alberta\r\n\t\t\tYellow(1), //Argentina\r\n\t\t\tYellow(7), //Brazil\r\n\t\t\tYellow(2), //Central America\r\n\t\t\tGreen(1), //China\r\n\t\t\tBlue(1), //Congo\r\n\t\t\tBlue(1), //East Africa\r\n\t\t\tGreen(1), //Eastern Australia\r\n\t\t\tBlack(5), //Eastern United States\r\n\t\t\tBlue(6), //Egypt\r\n\t\t\tRed(1), //Great Britain\r\n\t\t\tWhite(1), //Greenland\r\n\t\t\tRed(4), //Iceland\r\n\t\t\tGreen(1), //India\r\n\t\t\tGreen(3), //Indonesia\r\n\t\t\tWhite(1), //Irkutsk\r\n\t\t\tWhite(1), //Japan\r\n\t\t\tYellow(1), //Kamchatka\r\n\t\t\tBlue(1), //Madagascar\r\n\t\t\tBlue(3), //Middle East\r\n\t\t\tYellow(2), //Mongolia\r\n\t\t\tGreen(3), //New Guinea\r\n\t\t\tBlue(7), //North Africa\r\n\t\t\tRed(1), //Northern Europe\r\n\t\t\tBlack(1), //Northwest Territory\r\n\t\t\tBlack(1), //Ontario\r\n\t\t\tYellow(1), //Peru\r\n\t\t\tBlack(1), //Quebec\r\n\t\t\tRed(4), //Scandinavia\r\n\t\t\tGreen(10), //Siam\r\n\t\t\tWhite(1), //Siberia\r\n\t\t\tBlue(1), //South Africa\r\n\t\t\tRed(2), //Southern Europe\r\n\t\t\tRed(6), //Ukraine\r\n\t\t\tWhite(4), //Ural\r\n\t\t\tYellow(6), //Venezuela\r\n\t\t\tGreen(1), //Western Australia\r\n\t\t\tRed(2), //Western Europe\r\n\t\t\tBlack(5), //Western United States\r\n\t\t\tWhite(6) //Yakutsk\r\n\t\t],\r\n\t\t/** ## All totalities but Black ############################################################\r\n\t\t*/\r\n\t\tallTotalitiesButBlack: [\r\n\t\t\tBlack(6), //Afghanistan\r\n\t\t\tWhite(5), //Alaska\r\n\t\t\tWhite(2), //Alberta\r\n\t\t\tYellow(1), //Argentina\r\n\t\t\tYellow(7), //Brazil\r\n\t\t\tYellow(2), //Central America\r\n\t\t\tGreen(1), //China\r\n\t\t\tBlue(1), //Congo\r\n\t\t\tBlue(1), //East Africa\r\n\t\t\tGreen(1), //Eastern Australia\r\n\t\t\tWhite(5), //Eastern United States\r\n\t\t\tBlue(6), //Egypt\r\n\t\t\tRed(1), //Great Britain\r\n\t\t\tBlack(1), //Greenland\r\n\t\t\tRed(4), //Iceland\r\n\t\t\tGreen(1), //India\r\n\t\t\tGreen(3), //Indonesia\r\n\t\t\tBlack(1), //Irkutsk\r\n\t\t\tBlack(1), //Japan\r\n\t\t\tYellow(1), //Kamchatka\r\n\t\t\tBlue(1), //Madagascar\r\n\t\t\tBlue(3), //Middle East\r\n\t\t\tYellow(2), //Mongolia\r\n\t\t\tGreen(3), //New Guinea\r\n\t\t\tBlue(7), //North Africa\r\n\t\t\tRed(1), //Northern Europe\r\n\t\t\tWhite(1), //Northwest Territory\r\n\t\t\tWhite(1), //Ontario\r\n\t\t\tYellow(1), //Peru\r\n\t\t\tWhite(1), //Quebec\r\n\t\t\tRed(4), //Scandinavia\r\n\t\t\tGreen(10), //Siam\r\n\t\t\tBlack(1), //Siberia\r\n\t\t\tBlue(1), //South Africa\r\n\t\t\tRed(2), //Southern Europe\r\n\t\t\tRed(6), //Ukraine\r\n\t\t\tBlack(4), //Ural\r\n\t\t\tYellow(6), //Venezuela\r\n\t\t\tGreen(1), //Western Australia\r\n\t\t\tRed(2), //Western Europe\r\n\t\t\tWhite(5), //Western United States\r\n\t\t\tBlack(6) //Yakutsk\r\n\t\t]\r\n\t}).mapApply(function (n, ts) { // Now turn the arrays into objects.\r\n\t\treturn [n, Iterable.zip(MAPS.classic.territories, ts).toObject()];\r\n\t}).toObject();\r\n})();","/** See __prologue__.js\n*/\n\t[\n\t\tBoardMap, Risk, players.RiskContinentPlayer, AttackAleatory\n\t].forEach(function (type) {\n\t\ttype.__SERMAT__.identifier = exports.__package__ +'.'+ type.__SERMAT__.identifier;\n\t\texports.__SERMAT__.include.push(type);\n\t});\n\tSermat.include(exports);\n\treturn exports;\n}"]}