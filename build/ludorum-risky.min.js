//! ludorum-risky 0.0.1

(function(t){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","sermat","ludorum"],t):"object"==typeof exports&&module.exports?module.exports=t(require("creatartis-base"),require("sermat"),require("ludorum")):this["ludorum-risky"]=t(this.base,this.Sermat,this.ludorum)}).call(this,function t(u,r,o){"use strict";var e,n=u.declare,c=u.iterable,h=u.Iterable,l=u.raise,f=u.raiseIf,i=u.initialize,a=u.Randomness,s=o.Game,d=o.Player,A={__package__:"ludorum-risky",__name__:"ludorum_risky",__init__:t,__dependencies__:[u,r,o],__SERMAT__:{include:[u]},attackProbabilities:function(s,t){var o={},c=function(t,r){return r-t};h.product.apply(h,h.repeat([1,2,3,4,5,6],s+t).toArray()).forEach(function(t){var r,e=t.slice(0,s).sort(c),n=t.slice(s).sort(c),i=0,a=0;u.iterable(e).zip(n).forEachApply(function(t,r){r<t?i++:a++}),o[r="A"+i+"D"+a]=1+(0|o[r])});var r=Math.pow(6,s+t);for(var e in o)o[e]=o[e]/r;return o}},y=A.ATTACK_PROBABILITIES={A1D1:{A1D0:.5833333333333334,A0D1:.4166666666666667},A1D2:{A1D0:.7453703703703703,A0D1:.25462962962962965},A2D1:{A1D0:.4212962962962963,A0D1:.5787037037037037},A2D2:{A1D1:.32407407407407407,A2D0:.44830246913580246,A0D2:.22762345679012347},A3D1:{A1D0:.3402777777777778,A0D1:.6597222222222222},A3D2:{A1D1:.3357767489711934,A2D0:.2925668724279835,A0D2:.37165637860082307}},p=n(o.aleatories.Aleatory,{constructor:function(t){f(t.length<1,"Aleatory cannot have an empty distribution!"),this.__distribution__=c(t)},distribution:function(){return this.__distribution__},value:function(t){return(t||a.DEFAULT).weightedChoice(this.__distribution__)},"static __SERMAT__":{identifier:"AttackAleatory",serializer:function(t){return[t.__distribution__.toArray()]}}}),m=A.ATTACK_ALEATORIES=c(y).mapApply(function(t,r){var e=c(r).mapApply(function(t,r){return[{attack:-(0|t.charAt(1)),defence:-(0|t.charAt(3))},r]});return[t,new p(e)]}).toObject(),C=A.conquestProbability=function t(r,e,n,i){if(i=i||y,r<1)return 0;if(e<1)return 1;var a="A"+r+"D"+e,s=(n=n||S)[a];return isNaN(s)?((s=1)===e&&(1===r?s=i.A1D1.A1D0:2===r?s=i.A2D1.A1D0+i.A2D1.A0D1*t(r-1,e,n,i):3<=r&&(s=i.A3D1.A1D0+i.A3D1.A0D1*t(r-1,e,n,i))),2===e&&(1===r?s=i.A1D2.A1D0*t(r,e-1,n,i):2===r&&(s=i.A2D2.A2D0+i.A2D2.A1D1*t(r-1,e-1,n,i))),3<=e&&(1===r?s=i.A1D2.A1D0*t(r,e-1,n,i):2===r&&(s=i.A2D2.A2D0*t(r,e-2,n,i)+i.A2D2.A1D1*t(r-1,e-1,n,i))),3<=r&&2<=e&&(s=i.A3D2.A2D0*t(r,e-2,n,i)+i.A3D2.A0D2*t(r-2,e,n,i)+i.A3D2.A1D1*t(r-1,e-1,n,i)),n[a]=s):s},S=A.CONQUEST_PROBABILITIES=(C(30,30,e={},y),e),E=A.BoardMap=n({constructor:function(e,n,t){f(!e||Object.keys(e).length<2,"Illegal territory definition ",JSON.stringify(e),"!"),n=n||{},t=t||{},this.adjacents=Object.freeze(e),this.territories=Object.freeze(c(e).mapApply(function(r,t){return f(t.length<1,"Territory ",r," has no frontiers!"),t.forEach(function(t){f(!e.hasOwnProperty(t),"Territory ",r," has a frontier with an unknown territory ",t,"!"),f(r===t,"Territory ",r," has a frontier with itself!")}),r}).sorted().toArray()),this.territoryIndexes=Object.freeze(c(this.territories).map(function(t,r){return[t,r]}).toObject()),this.continentTerritories=Object.freeze(n),this.continents=Object.freeze(c(n).mapApply(function(r,t){return f(t.length<1,"Continent ",r," has no territories!"),t.forEach(function(t){f(!e.hasOwnProperty(t),"Continent ",r," has an unknown territory ",t,"!")}),r}).sorted().toArray()),c(t).forEachApply(function(t,r){f(!n.hasOwnProperty(t),"Bonus defined for unknown continent ",t,"!")}),this.bonuses=Object.freeze(t),Object.freeze(this)},territoryContinent:function(n){return c(this.continentTerritories).filterApply(function(t,r){var e=!1;return c(r).forEach(function(t){t===n&&(e=!0)}),e},function(t,r){return t}).toArray().toString()},adjacent:function(t,r){return this.adjacents[t]&&0<=this.adjacents[t].indexOf(r)},frontiers:function(){return c(this.adjacents).mapApply(function(r,t){return t.map(function(t){return[r,t]})}).flatten()},bonus:function(){for(var t=0,r=0;r<arguments.length;r++)t+=this.bonuses[arguments[r]]||0;return t},territoryIndex:function(t){var r=this.territories.indexOf(t);return f(r<0,"Could not find index for territory '",t,"'!"),r},"static __SERMAT__":{identifier:"BoardMap",serializer:function(t){return[t.adjacents,t.continentTerritories,t.bonuses]}}}),v=A.maps={};v.test01=new E({WhiteCountry:["BlackCountry","YellowCountry"],YellowCountry:["WhiteCountry","RedCountry"],RedCountry:["YellowCountry","GreenCountry"],GreenCountry:["RedCountry","BlueCountry"],BlueCountry:["GreenCountry","BlackCountry"],BlackCountry:["BlueCountry","WhiteCountry"]},{GreyContinent:["WhiteCountry","BlackCountry"],OrangeContinent:["YellowCountry","RedCountry"],CyanContinent:["GreenCountry","BlueCountry"]},{GreyContinent:2,OrangeContinent:2,CyanContinent:2}),v.classic=new E({Alaska:["Alberta","Northwest Territory","Kamchatka"],Alberta:["Alaska","Northwest Territory","Ontario","Western United States"],"Central America":["Eastern United States","Western United States","Venezuela"],"Eastern United States":["Alberta","Central America","Ontario","Quebec","Western United States"],Greenland:["Northwest Territory","Ontario","Quebec","Iceland"],"Northwest Territory":["Alaska","Alberta","Ontario","Greenland"],Ontario:["Alberta","Eastern United States","Greenland","Northwest Territory","Quebec","Western United States"],Quebec:["Eastern United States","Greenland","Ontario"],"Western United States":["Alberta","Central America","Eastern United States","Ontario"],Argentina:["Brazil","Peru"],Brazil:["Argentina","Peru","Venezuela","North Africa"],Peru:["Argentina","Brazil","Venezuela"],Venezuela:["Brazil","Peru","Central America"],"Great Britain":["Iceland","Northern Europe","Scandinavia","Western Europe"],Iceland:["Great Britain","Scandinavia","Greenland"],"Northern Europe":["Great Britain","Scandinavia","Southern Europe","Ukraine","Western Europe"],Scandinavia:["Great Britain","Iceland","Northern Europe","Ukraine"],"Southern Europe":["Northern Europe","Ukraine","Western Europe","Middle East","Egypt","North Africa"],Ukraine:["Northern Europe","Scandinavia","Southern Europe","Afghanistan","Middle East","Ural"],"Western Europe":["Great Britain","Northern Europe","Southern Europe","North Africa"],Congo:["East Africa","North Africa","South Africa"],"East Africa":["Congo","Egypt","Madagascar","North Africa","South Africa","Middle East"],Egypt:["East Africa","North Africa","Southern Europe","Middle East"],Madagascar:["East Africa","South Africa"],"North Africa":["Congo","East Africa","Egypt","Southern Europe","Western Europe","Brazil"],"South Africa":["Congo","East Africa","Madagascar"],Afghanistan:["China","India","Middle East","Ural","Ukraine"],China:["Afghanistan","India","Mongolia","Siam","Siberia","Ural"],India:["Afghanistan","China","Middle East","Siam"],Irkutsk:["Kamchatka","Mongolia","Siberia","Yakutsk"],Japan:["Kamchatka","Mongolia"],Kamchatka:["Irkutsk","Japan","Mongolia","Yakutsk","Alaska"],"Middle East":["Afghanistan","India","Southern Europe","Ukraine","East Africa","Egypt"],Mongolia:["China","Irkutsk","Japan","Kamchatka","Siberia"],Siam:["China","India","Indonesia"],Siberia:["China","Irkutsk","Mongolia","Ural","Yakutsk"],Ural:["Afghanistan","China","Siberia","Ukraine"],Yakutsk:["Irkutsk","Kamchatka","Siberia"],"Eastern Australia":["New Guinea","Western Australia"],Indonesia:["New Guinea","Western Australia","Siam"],"New Guinea":["Eastern Australia","Indonesia","Western Australia"],"Western Australia":["Eastern Australia","Indonesia","New Guinea"]},{"South America":["Argentina","Brazil","Peru","Venezuela"],Australia:["Eastern Australia","Indonesia","New Guinea","Western Australia"],Africa:["Congo","East Africa","Egypt","Madagascar","North Africa","South Africa"],Europe:["Great Britain","Iceland","Northern Europe","Scandinavia","Southern Europe","Ukraine","Western Europe"],"North America":["Alaska","Alberta","Central America","Eastern United States","Greenland","Northwest Territory","Ontario","Quebec","Western United States"],Asia:["Afghanistan","China","India","Irkutsk","Japan","Kamchatka","Middle East","Mongolia","Siam","Siberia","Ural","Yakutsk"]},{Asia:7,"North America":5,Europe:5,Africa:3,Australia:2,"South America":2});var g=A.Risk=n(s,{name:"Risk",players:["White","Yellow","Red","Green","Blue","Black"],STAGES:{PLACE:0,REINFORCE:1,ATTACK:2,OCCUPY:3,FORTIFY:4},constructor:function(t){i(this,t=t||{}).object("boardMap",{defaultValue:v.classic}).array("stage",{ignore:!0}).integer("round",{coerce:!0,defaultValue:0}).number("rounds",{coerce:!0,defaultValue:1/0}),s.call(this,t.activePlayer),t.armies?"string"==typeof t.armies?this.armies=t.armies:"object"==typeof t.armies?this.armies=this.compressGameState(t.armies):l("Invalid armies < ",JSON.stringify(t.armies)," >!"):this.armies=this.compressGameState(this.emptyGameState()),this.stage||(this.stage=[this.STAGES.REINFORCE,this.playerReinforcements()])},emptyGameState:function(){return c(this.boardMap.territories).map(function(t){return[t,["",0]]}).toObject()},compressGameState:function(n){var i=this.players,a=i.length;return this.boardMap.territories.map(function(t){var r=n[t][1];if(0<r){var e=i.indexOf(n[t][0]);f(e<0,"Unknown player '",n[t][0],"!"),r=r*a+e}return String.fromCharCode(r)}).join("")},uncompressGameState:function(t){var e={},n=this.players,i=n.length;return c(this.boardMap.territories).zip(t).forEachApply(function(t,r){r=r.charCodeAt(0),e[t]=0<r?[n[r%i],Math.floor(r/i)]:["",0]}),e},playerOf:function(t){var r=this.boardMap.territoryIndexes[t],e=this.armies.charCodeAt(r);return e?this.players[e%this.players.length]:""},armyCount:function(t){var r=this.boardMap.territoryIndexes[t],e=this.armies.charCodeAt(r);return e?Math.floor(e/this.players.length):0},playerTerritories:function(e){e=this.players.indexOf(e||this.activePlayer());var n=this.players.length;return c(this.boardMap.territories).zip(this.armies).filterApply(function(t,r){return r.charCodeAt(0)%n===e},function(t,r){return t}).toArray()},playerContinents:function(e){e=this.players.indexOf(e||this.activePlayer());var n=this.players.length,i=this.armies,a=this.boardMap.territoryIndexes;return c(this.boardMap.continentTerritories).filterApply(function(t,r){return c(r).all(function(t){return i.charCodeAt(a[t])%n===e})},function(t,r){return t}).toArray()},playerPendingTerritories:function(n){n=n||this.activePlayer();var i=this,a={};return c(this.boardMap.continentTerritories).forEachApply(function(t,r){var e=0;r.forEach(function(t){i.playerOf(t)!=n&&(e+=1)}),a[t]=e}),a},hasPresence:function(r,t){r=r||this.activePlayer();var e=this,n=!1;return c(this.boardMap.continentTerritories[t]).forEach(function(t){e.playerOf(t)===r&&(n=!0)}),n},continentAdyacent:function(t,r){t=t||this.activePlayer();var e=this,n=!1;return c(e.boardMap.continentTerritories[r]).forEach(function(r){e.conflictFrontiers(t).forEach(function(t){t[1]===r&&(n=!0)})}),n},playerReinforcements:function(t){t=t||this.activePlayer();var r=this.playerTerritories(t).length/3,e=this.boardMap.bonus.apply(this.boardMap,this.playerContinents(t));return Math.floor(Math.max(this.MIN_REINFORCEMENTS,r)+e)},MIN_REINFORCEMENTS:3,scores:function(){var r=this;return c(this.players).map(function(t){return[t,r.playerTerritories(t).length]}).toObject()},dominated:function(){for(var t,r=this.players.length,e=-1,n=0,i=this.armies.length;n<i;n++)if(e!==(t=this.armies.charCodeAt(n)%r)){if(!(e<0))return null;e=t}return this.players[e]},moreHalfDominated:function(){return Math.round(this.boardMap.territories.length/2)<this.playerTerritories(this.activePlayer()).length?this.activePlayer():null},result:function(){var t=this.__result__;if(void 0===t){var r=this.moreHalfDominated();if(r)t=this.victory(r,5);else if(this.round>=this.rounds){var e=this.scores(),n=this.players.slice().sort(function(t,r){return e[r]-e[t]});t=n[0]>n[1]?this.victory(n[0]):this.tied()}else t=null;this.__result__=t}return t},moves:function(){var t=this.__moves__;if(void 0===t){var r=this.activePlayer();if(this.result())t=null;else switch(t={},this.stage[0]){case this.STAGES.PLACE:t[r]=this.placeMoves();break;case this.STAGES.REINFORCE:t[r]=this.reinforceMoves();break;case this.STAGES.ATTACK:t[r]=this.attackMoves();break;case this.STAGES.OCCUPY:t[r]=this.occupyMoves();break;case this.STAGES.FORTIFY:t[r]=this.fortifyMoves();break;default:l("Invalid stage < ",JSON.stringify(this.stage)," >!")}this.__moves__=t}return t},initialArmyCount:function(t){return[-1,-1,40,35,30,25,20][t||this.players.length]},placeMoves:function(){var n=this,i=this.activePlayer(),t=n.players.length,a=n.initialArmyCount(t),r=n.armies,e=[];return n.stage[0]===this.STAGES.PLACE&&(e=c(r).filter(function(t,r){var e="\0"===t;return e||n.players[t%this.players.length]!==i||(a-=Math.floor(t/this.players.length)),e},function(t,r){return["PLACE",r]}).toArray()).length<1&&0<a&&(e=c(r).filter(function(t,r){return n.players[t%this.players.length]===i},function(t,r){return["PLACE",r]}).toArray()),0<e.length?e:[this.PASS_MOVE]},reinforceMoves:function(){var t=this.activePlayer(),r=[];return this.stage[0]===this.STAGES.REINFORCE&&(r=h.product(["REINFORCE"],this.playerTerritories(t),h.range(1,this.stage[1]+1)).toArray()),0<r.length?r:[this.PASS_MOVE]},conflictFrontiers:function(e){e=e||this.activePlayer();var n=this;return c(this.boardMap.adjacents).mapApply(function(r,t){return n.playerOf(r)===e?c(t).filter(function(t){return n.playerOf(t)!==e},function(t){return[r,t]}):h.EMPTY}).flatten()},PASS_MOVE:["PASS"],attackMoves:function(){var n=this,i=[this.PASS_MOVE];return this.stage[0]===this.STAGES.ATTACK&&this.conflictFrontiers().forEach(function(t){for(var r=Math.min(n.MAX_ATTACK,n.armyCount(t[0])-1),e=1;e<=r;e++)i.push(["ATTACK",t[0],t[1],e])}),i},MAX_ATTACK:3,occupyMoves:function(){if(this.stage[0]===this.STAGES.OCCUPY){var t=this.stage[1];return h.range(1,this.armyCount(t)).map(function(t){return["OCCUPY",t]}).toArray()}return[]},fortifyMoves:function(){var t=[this.PASS_MOVE];if(this.stage[0]===this.STAGES.FORTIFY){var i=this,a=this.activePlayer();t=t.concat(c(this.boardMap.adjacents).mapApply(function(e,t){var r=i.playerOf(e),n=i.armyCount(e);return r===a&&1<n?c(t).filter(function(t){return i.playerOf(t)===a}).product(h.range(1,n)).mapApply(function(t,r){return["FORTIFY",e,t,r]}):h.EMPTY}).flatten().toArray())}return t},isValidPlace:function(t,r){var e=this.stage;if(e[0]!==this.STAGES.PLACE)return r&&r("Cannot place in this stage ("+e+")!"),!1;var n=t[1];return""===this.playerOf(n)||this.playerOf(n)===this.activePlayer()||(r&&r("Cannot place in territory "+t[1]+" because it is not free nor owned by "+activePlayer+"!"),!1)},isValidReinforce:function(t,r){var e=this.stage;if(e[0]!==this.STAGES.REINFORCE)return r&&r("Cannot reinforce in this stage ("+e+")!"),!1;var n=e[1]-t[2];if(!Math.floor(n+1)||n<0||t[2]<1)return r&&r("Cannot reinforce "+t[2]+" armies!"),!1;var i=this.uncompressGameState(this.armies),a=this.activePlayer();return!(!i[t[1]]||i[t[1]][0]!==a)||(r&&r("Cannot reinforce territory "+t[1]+" because active player "+a+" does not own it!"),!1)},isValidAttack:function(t,r){var e=this.uncompressGameState(this.armies),n=this.stage,i=this.activePlayer();if(n[0]!==this.STAGES.ATTACK)return r&&r("Cannot attack in this stage ("+n+")!"),!1;if(!e[t[1]]||e[t[1]][0]!==i)return r&&r("Cannot attack from "+t[1]+"!"),!1;if(!e[t[2]]||e[t[2]][0]===i)return r&&r("Cannot attack to "+t[2]+"!"),!1;var a=e[t[1]][1]-t[3];return!(!Math.floor(a+1)||a<1||3<t[3]||t[3]<1)||(r&&r("Cannot attack with "+t[3]+" armies!"),!1)},isValidOccupy:function(t,r){var e=this.stage;if(e[0]!==this.STAGES.OCCUPY)return r&&r("Cannot occupy in this stage ("+e+")!"),!1;var n=this.uncompressGameState(this.armies);this.activePlayer();return!(n[e[1]][1]-t[1]<1||!Math.floor(t[1])||n[e[1]][1]<t[1]||t[1]<1)||(r&&r("Cannot occupy territory "+e[2]+" with "+t[1]+" armies!"),!1)},isValidFortify:function(t,r){var e=this.stage;if(e[0]!==this.STAGES.FORTIFY)return r&&r("Cannot fortify in this stage ("+e+")!"),!1;var n=this.uncompressGameState(this.armies),i=this.activePlayer();return n[t[1]]&&n[t[1]][0]===i?n[t[2]]&&n[t[2]][0]===i&&this.boardMap.adjacent(t[1],t[2])?!(!Math.floor(t[3])||t[3]<1||n[t[1]][1]<=t[3])||(r&&r("Cannot fortify with "+t[3]+" armies!"),!1):(r&&r("Cannot fortify to territory "+t[2]+"!"),!1):(r&&r("Cannot fortify from territory "+t[1]+"!"),!1)},next:function(t,r){var e=t[this.activePlayer()];switch(f(!e,"Active player has no moves!"),e[0]){case"PLACE":return this.nextPlacement(e);case"REINFORCE":return this.nextReinforce(e);case"ATTACK":return this.nextAttack(e,r);case"OCCUPY":return this.nextOccupy(e);case"FORTIFY":return this.nextFortify(e);case"PASS":return this.nextPass(e);default:l("Invalid move < ",JSON.stringify(e)," >!")}},nextPlacement:function(t){if(this.isValidReinforce(t,l)){this.stage;var r=this.uncompressGameState(this.armies),e=this.activePlayer();return r[t[1]][1]+=1,new this.constructor({boardMap:this.boardMap,stage:[this.STAGES.PLACE],round:-1,rounds:this.rounds,armies:r,activePlayer:this.players[(this.players.indexOf(e)+1)%this.players.length]})}},nextReinforce:function(t){if(this.isValidReinforce(t,l)){var r=this.stage,e=this.uncompressGameState(this.armies),n=r[1]-t[2],i=this.activePlayer();return e[t[1]][1]+=t[2],new this.constructor({boardMap:this.boardMap,stage:0<n?[this.STAGES.REINFORCE,n]:[this.STAGES.ATTACK],round:this.round,rounds:this.rounds,armies:e,activePlayer:i})}},nextAttack:function(t,r){this.stage;var e=this.activePlayer();if(!r){var n="A"+t[3]+"D"+Math.min(2,this.armyCount(t[2])),i=m[n];return f(!i,"Could not find aleatory for ",n,"!"),new o.Contingent(this,u.obj(e,t),{rolls:i})}if(this.isValidAttack(t,l)){var a=this.uncompressGameState(this.armies);a[t[1]][1]+=r.rolls.attack,a[t[2]][1]+=r.rolls.defence;var s=a[t[2]][1]<1;return s&&(a[t[2]][0]=e),new this.constructor({boardMap:this.boardMap,stage:s?[this.STAGES.OCCUPY,t[1],t[2]]:this.stage,round:this.round,rounds:this.rounds,armies:a,activePlayer:this.activePlayer()})}},nextOccupy:function(t){if(this.isValidOccupy(t,l)){var r=this.stage,e=this.uncompressGameState(this.armies),n=this.activePlayer();return e[r[1]][1]-=t[1],e[r[2]]=[n,t[1]],new this.constructor({boardMap:this.boardMap,stage:[this.STAGES.ATTACK],round:this.round,rounds:this.rounds,armies:e,activePlayer:n})}},nextFortify:function(t){if(this.isValidFortify(t,l)){var r=this.uncompressGameState(this.armies),e=this.activePlayer();return r[t[1]][1]-=t[3],r[t[2]][1]+=t[3],new this.constructor(this.__advanceTurn__({boardMap:this.boardMap,stage:null,round:this.round,rounds:this.rounds,armies:r,activePlayer:e}))}},nextPass:function(t){var r={boardMap:this.boardMap,round:this.round,rounds:this.rounds,armies:this.armies,activePlayer:this.activePlayer()};switch(this.stage[0]){case this.STAGES.REINFORCE:r.stage=[this.STAGES.ATTACK];break;case this.STAGES.ATTACK:r.stage=[this.STAGES.FORTIFY];break;case this.STAGES.OCCUPY:l("Cannot pass!");break;case this.STAGES.FORTIFY:r=this.__advanceTurn__(r)}return new this.constructor(r)},__advanceTurn__:function(t){for(var r=(this.players.indexOf(t.activePlayer)+1)%this.players.length,e=0;e<this.players.length;e++){if(0===r&&t.round++,0<this.playerTerritories(this.players[r]).length){t.activePlayer=this.players[r];break}r=(r+1)%this.players.length}return t},"static __SERMAT__":{identifier:"Risk",serializer:function(t){var r=this.serializeAsProperties(t,["boardMap","stage","round","rounds","armies"],!0);return r[0].activePlayer=t.activePlayer(),r}},"static armyAleatoryDistribution":function(e,t){var n={},r=t.territories,i=h.range(e.length).toArray(),a=i.slice();return r.forEach(function(t){a.length<1&&(a=i.slice());var r=Math.floor(Math.random()*a.length);n[t]=[e[a[r]],Math.floor(10*Math.random())+1],a.splice(r,1)}),n},"static armyDistribution":function(e,t){var n={},r=t.territories,i=h.range(e.length).toArray(),a=i.slice(),s=[20,20,20,20,20,20],o=6;return r.forEach(function(t){a.length<1&&(a=i.slice(),--o);var r=Math.floor(Math.random()*a.length);n[t]=[e[a[r]],Math.floor(Math.random()*(s[a[r]]-o))+1],s[a[r]]-=n[t][1],a.splice(r,1)}),n},caseBoardCode:function(){var n=this.uncompressGameState(this.armies),t=this.activePlayer(),r=this.players.indexOf(t),i=this.players.slice(r).concat(this.players.slice(0,r)),a=i.length;return this.boardMap.territories.map(function(t){var r=Math.min(30,n[t][1]),e=i.indexOf(n[t][0]);return 10<r&&(r=r/2+5),String.fromCharCode(r*a+e)}).join("")},caseActionCode:function(t){var r=0;switch(t[0]){case"PASS":break;case"PLACE":r=8*this.boardMap.territoryIndex(t[1])+1;break;case"REINFORCE":r=8*this.boardMap.territoryIndex(t[1])+2;break;case"ATTACK":r=8*this.boardMap.territoryIndex(t[2])+3;break;case"OCCUPY":r=8*t[1]+4;break;case"FORTIFY":r=8*this.boardMap.territoryIndex(t[2])+5;break;default:l("Invalid action < ",JSON.stringify(t)," >!")}return String.fromCharCode(r)},caseCode:function(t,r){return(r=r||this).caseActionCode(t)+" "+r.caseBoardCode()}}),b=A.players={};b.heuristics={territoryCount:function(t,r){return t.playerTerritories(r).length/t.boardMap.territories.length},continentCount:function(t,r){return t.playerContinents(r).length/t.boardMap.continents.length},territoryHeuristic:function(t,r){var e=t.uncompressGameState(t.armies),n={},i=0;c(e).forEachApply(function(t,r){n[r[0]]=1+(0|n[r[0]]),i++});var a=-1/0,s=1/0,o=0;return c(n).forEachApply(function(t,r){a<r&&(a=r),r<s&&(s=r),o++}),a===s?0:((0|n[r])-i/o)/(a-s)},heuristicPru:function(t,r){return(4*t.playerContinents(r).length+t.playerTerritories(r).length)/(4*t.boardMap.continents.length+t.boardMap.territories.length)},heuristicReinforcements:function(t,r){return t.playerReinforcements(r)/38-.5},heuristicConquestProbability:function(i,t){var a=0;return i.conflictFrontiers(t).mapApply(function(t,r){var e=i.armyCount(t),n=i.armyCount(r);return a++,C(e,n)-C(n,e)}).sum()/a},heuristic2:function(t,r){return.8*g.heuristics.heuristicPru(t,r)+(1-.8)*g.heuristics.heuristicConquestProbability(t,r)}},b.RiskSimplePlayer=n(d,{constructor:function(t){d.call(this,t),this.random=t.random||a.DEFAULT},decision:function(t,r){t.moves()[r],this.random;switch(t.stage[0]){case t.STAGES.REINFORCE:return this.decisionReinforce(t,r);case t.STAGES.ATTACK:return this.decisionAttack(t,r);case t.STAGES.OCCUPY:return this.decisionOccupy(t,r);case t.STAGES.FORTIFY:return this.decisionFortify(t,r)}l("Unsupported stage ",t.stage[0],"!")},decisionReinforce:function(t,r){var e=t.moves()[r],n=this.random,i={};return t.conflictFrontiers(r).forEachApply(function(t,r){i[t]=1+(0|i[t])}),(e=e.filter(function(t){return i.hasOwnProperty(t[1])})).sort(function(t,r){return i[r]-i[t]}),e[Math.min(n.randomInt(e.length),n.randomInt(e.length))]},decisionAttack:function(r,t){var e=r.moves()[t],n=this.random;return e=e.filter(function(t){return"ATTACK"===t[0]&&t[3]===r.MAX_ATTACK}),n.choice(e)||r.PASS_MOVE},decisionOccupy:function(t,r){var e=t.moves()[r],n=c(e).select(1).max();return n<2?e[0]:["OCCUPY",n-1]},decisionFortify:function(r,t){var e=r.moves()[t],n=this.random;return(e=e.filter(function(t){return"FORTIFY"===t[0]&&r.armyCount(t[1])-t[3]>=r.armyCount(t[2])})).sort(function(t,r){return r[3]-t[3]}),e.length<1?r.PASS_MOVE:e[Math.min(n.randomInt(e.length),n.randomInt(e.length))]},"static __SERMAT__":{identifier:"RiskSimplePlayer",serializer:function(t){var r=d.__SERMAT__.serializer(t);return r[0].random=t.random,r}}}),b.RiskContinentPlayer=n(d,{constructor:function(t){t=t||{},d.call(this,t),this.random=t.random||a.DEFAULT},decision:function(t,r){t.moves()[r],this.random;switch(t.stage[0]){case t.STAGES.REINFORCE:return this.decisionReinforce(t,r);case t.STAGES.ATTACK:return this.decisionAttack(t,r);case t.STAGES.OCCUPY:return this.decisionOccupy(t,r);case t.STAGES.FORTIFY:return this.decisionFortify(t,r)}l("Unsupported stage ",t.stage[0],"!")},targetContinent:function(e,n){var i="",a=13;return c(e.playerPendingTerritories(n)).forEachApply(function(t,r){0!==r&&r<a&&e.continentAdyacent(n,t)&&(a=r,i=t)}),i},decisionReinforce:function(e,t){var r=e.moves()[t],n=this.random,i={},a=this.targetContinent(e,t);return e.conflictFrontiers(t).forEachApply(function(t,r){e.boardMap.territoryContinent(r)===a&&(i[t]=1+(0|i[t]))}),(r=r.filter(function(t){return i.hasOwnProperty(t[1])})).sort(function(t,r){return i[r]-i[t]}),r[Math.min(n.randomInt(r.length),n.randomInt(r.length))]},decisionAttack:function(r,t){var e=r.moves()[t],n=this.random,i=this.targetContinent(r,t);return e=e.filter(function(t){return"ATTACK"===t[0]&&t[3]===r.MAX_ATTACK&&r.boardMap.territoryContinent(t[2])===i||C(r.armyCount(t[1]),.75<r.armyCount(t[2]))}),n.choice(e)||r.PASS_MOVE},decisionOccupy:function(t,r){var e=t.moves()[r],n=c(e).select(1).max();return n<2?e[0]:["OCCUPY",n-1]},decisionFortify:function(t,r){return["PASS"]},"static __SERMAT__":{identifier:"RiskContinentPlayer",serializer:function(t){var r=d.__SERMAT__.serializer(t);return r[0].random=t.random,r}}});var T,O,_,M,P,k,I;A.scenarios=(O=(T=function(t,r){return[t,0|r]}).bind(null,"White"),_=T.bind(null,"Yellow"),M=T.bind(null,"Red"),P=T.bind(null,"Blue"),k=T.bind(null,"Green"),I=T.bind(null,"Black"),c({whiteOceania:[k(12),I(12),P(12),M(9),k(2),_(12),O(6),I(2),P(1),O(1),k(2),_(2),P(1),M(2),P(3),O(6),O(1),_(1),I(2),k(1),I(1),_(2),M(4),O(1),M(1),P(1),P(1),I(1),k(1),_(1),k(1),O(4),_(1),M(1),P(1),I(1),M(1),I(1),O(1),_(1),M(2),k(1)],blackOceania:[k(12),O(12),P(12),M(9),k(2),_(12),I(6),O(2),P(1),I(1),k(2),_(2),P(1),M(2),P(3),I(6),I(1),_(1),O(2),k(1),O(1),_(2),M(4),I(1),M(1),P(1),P(1),O(1),k(1),_(1),k(1),I(4),_(1),M(1),P(1),O(1),M(1),O(1),I(1),_(1),M(2),k(1)],whiteAfrica:[k(12),I(12),P(12),M(9),O(5),_(12),I(2),O(1),O(4),P(1),k(2),O(5),P(1),M(2),P(3),_(2),I(1),_(1),I(2),k(1),O(1),_(2),M(4),M(1),O(3),P(1),P(1),I(1),k(1),_(1),k(1),k(2),_(1),O(1),P(1),I(1),M(1),I(1),M(1),_(1),M(2),k(1)],blackAfrica:[k(12),O(12),P(12),M(9),I(5),_(12),O(2),I(1),I(4),P(1),k(2),I(5),P(1),M(2),P(3),_(2),O(1),_(1),O(2),k(1),I(1),_(2),M(4),M(1),I(3),P(1),P(1),O(1),k(1),_(1),k(1),k(2),_(1),I(1),P(1),O(1),M(1),O(1),M(1),_(1),M(2),k(1)],spreadOut:[_(3),O(3),O(3),O(2),k(3),P(2),O(4),P(3),_(4),k(2),I(6),M(3),M(4),O(1),M(2),_(3),k(4),O(5),k(4),M(3),M(2),_(3),I(5),I(3),I(2),k(1),_(2),_(2),P(2),k(4),P(3),_(3),I(1),M(3),I(1),P(3),k(2),O(2),M(3),P(3),P(4),I(2)],spreadOutBlack:[_(3),I(3),I(3),I(2),k(3),P(2),I(4),P(3),_(4),k(2),O(6),M(3),M(4),I(1),M(2),_(3),k(4),I(5),k(4),M(3),M(2),_(3),O(5),O(3),O(2),k(1),_(2),_(2),P(2),k(4),P(3),_(3),O(1),M(3),O(1),P(3),k(2),I(2),M(3),P(3),P(4),O(2)],spreadOutV2:[I(3),_(3),P(3),k(2),M(3),I(3),_(3),O(3),k(3),I(4),_(3),_(3),O(3),P(3),M(3),P(3),k(5),M(3),I(1),k(3),M(2),O(3),O(1),O(5),I(3),k(3),I(3),k(3),O(2),O(3),I(3),M(3),k(1),P(2),P(3),M(3),P(3),P(3),_(4),_(3),M(3),_(1)],spreadOute1:[O(3),M(2),_(4),P(3),k(2),M(2),M(4),I(2),M(5),_(3),O(4),I(2),_(2),M(1),k(3),M(4),I(3),_(3),O(2),O(4),_(1),k(1),P(1),P(4),_(3),I(2),k(4),M(2),I(3),k(4),P(4),I(4),k(3),k(3),O(2),P(3),I(4),O(1),P(2),P(3),_(4),O(4)],whiteSpreadOut:[P(1),I(1),I(2),_(1),_(1),_(12),k(1),_(2),P(1),O(1),O(6),P(12),M(1),O(1),M(1),P(1),k(2),I(2),O(1),I(12),P(1),P(3),k(1),k(2),_(2),O(4),I(1),I(1),O(1),I(1),M(4),k(1),k(12),P(1),M(2),M(9),M(1),_(1),k(1),M(2),_(1),O(6)],blackSpreadOut:[P(1),O(1),O(2),_(1),_(1),_(12),k(1),_(2),P(1),I(1),I(6),P(12),M(1),I(1),M(1),P(1),k(2),O(2),I(1),O(12),P(1),P(3),k(1),k(2),_(2),I(4),O(1),O(1),I(1),O(1),M(4),k(1),k(12),P(1),M(2),M(9),M(1),_(1),k(1),M(2),_(1),I(6)],allTotalitiesButWhite:[O(6),I(5),I(2),_(1),_(7),_(2),k(1),P(1),P(1),k(1),I(5),P(6),M(1),O(1),M(4),k(1),k(3),O(1),O(1),_(1),P(1),P(3),_(2),k(3),P(7),M(1),I(1),I(1),_(1),I(1),M(4),k(10),O(1),P(1),M(2),M(6),O(4),_(6),k(1),M(2),I(5),O(6)],allTotalitiesButBlack:[I(6),O(5),O(2),_(1),_(7),_(2),k(1),P(1),P(1),k(1),O(5),P(6),M(1),I(1),M(4),k(1),k(3),I(1),I(1),_(1),P(1),P(3),_(2),k(3),P(7),M(1),O(1),O(1),_(1),O(1),M(4),k(10),I(1),P(1),M(2),M(6),I(4),_(6),k(1),M(2),O(5),I(6)]}).mapApply(function(t,r){return[t,h.zip(v.classic.territories,r).toObject()]}).toObject());return A.RiskSVGInterface=u.declare(o.players.UserInterface,{constructor:function(t){t=t||{},o.players.UserInterface.call(this,t),this.document=t.document||u.global.document,this.container=t.container,this.container?"string"==typeof this.container&&(this.container=this.document.getElementById(this.container)):this.container=this.document.getElementsByTagName("svg")[0]},fillColours:{White:"rgba(255,255,255,0.66)",Yellow:"rgba(255,255, 50,0.66)",Red:"rgba(255, 50, 50,0.66)",Green:"rgba(  0,200,  0,0.66)",Blue:"rgba( 50, 50,255,0.66)",Black:"rgba(128,128,128,0.66)"},__checkSVG__:function(t,r){},display:function(t){if(!t.isContingent){var s=this,o=this.document,r=t.uncompressGameState(t.armies);c(r).forEachApply(function(t,r){f(!o.querySelector("#territory-"+t),"No element found for #territory-",t,"!");var e=o.querySelector("#territory-"+t+" path"),n=o.querySelector("#territory-"+t+" text tspan")||o.querySelector("#territory-"+t+" text"),i=r[0],a=+r[1];e.style.fill=s.fillColours[i],n.innerHTML=a+""}),s.clearConstructedAction(),s.container.onclick=this.handleUserLeftClick.bind(null,s),s.container.oncontextmenu=this.handleUserRightClick.bind(null,s),o.getElementById("setNumberOfArmies").onclick=this.handleUserSetNumberOfArmies.bind(null,s),o.getElementById("pass").onclick=this.handleUserPass.bind(null,s)}},constructedAction:{},clearConstructedAction:function(){this.constructedAction={}},handleUserPass:function(t){t.constructedAction.pass=!0,t.performConstructedActionIfPossible()},handleUserLeftClick:function(t,r){var e=t.resolveTargetCountry(r),n=r.button;"NaC"===e?t.clearConstructedAction():0===n&&(t.clearConstructedAction(),t.constructedAction.actionCountry=e),t.performConstructedActionIfPossible()},handleUserRightClick:function(t,r){r.preventDefault();var e=t.resolveTargetCountry(r),n=r.button;"NaC"===e||2===n&&(t.constructedAction.targetCountry=e),t.performConstructedActionIfPossible()},handleUserSetNumberOfArmies:function(t){var r=document.getElementById("numberOfArmys").value;t.constructedAction.numberOfArmies=r,t.performConstructedActionIfPossible()},resolveTargetCountry:function(t){var r=t.target.parentNode.id,e="NaC";return/territory-\w+/.test(r)&&(e=r.split("-")[1]),e},generateAction:function(){var t;if(this.constructedAction.pass)return t=["PASS"];if(void 0===this.constructedAction.actionCountry);else if(void 0===this.constructedAction.numberOfArmies);else if(void 0===this.constructedAction.targetCountry){if(t=["REINFORCE",this.constructedAction.actionCountry,parseInt(this.constructedAction.numberOfArmies)],this.match.state().isValidReinforce(t))return t;if(t=["OCCUPY",parseInt(this.constructedAction.numberOfArmies)],this.match.state().isValidOccupy(t))return t}else{if(t=["ATTACK",this.constructedAction.actionCountry,this.constructedAction.targetCountry,parseInt(this.constructedAction.numberOfArmies)],this.match.state().isValidAttack(t))return t;if(t=["FORTIFY",this.constructedAction.actionCountry,this.constructedAction.targetCountry,parseInt(this.constructedAction.numberOfArmies)],this.match.state().isValidFortify(t))return t}return"NaA"},performConstructedActionIfPossible:function(){var t=this.generateAction();console.log(t),"NaA"!==t&&this.perform(t)}}),[E,g,b.RiskContinentPlayer,p].forEach(function(t){t.__SERMAT__.identifier=A.__package__+"."+t.__SERMAT__.identifier,A.__SERMAT__.include.push(t)}),r.include(A),A});
//# sourceMappingURL=ludorum-risky.min.js.map